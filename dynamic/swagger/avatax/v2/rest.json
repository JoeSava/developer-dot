{
	"swagger": "2.0",
	"info": {
		"version": "v2",
		"title": "AvaTax API",
		"description": "REST interface to Avalara's enterprise tax service, AvaTax.",
		"contact": {
			"name": "Avalara Developer Relations",
			"url": "https://developer.avalara.com"
		},
		"license": {
			"name": "Terms of Use",
			"url": "https://www.avalara.com/terms-of-use/"
		}
	},
	"host": "sandbox-rest.avatax.com",
	"schemes": [
		"https"
	],
	"basePath": "/",
	"paths": {
		"/api/v2/accounts": {
			
		},
		"/api/v2/accounts/{accountId}/subscriptions": {
			"get": {
				"tags": ["Subscriptions"],
				"summary": "Retrieve subscriptions for this account",
				"operationId": "ApiV2AccountsByAccountIdSubscriptionsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "accountId",
					"in": "path",
					"description": "The ID of the account that owns these subscriptions",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[SubscriptionModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/accounts/{accountId}/subscriptions/{id}": {
			"get": {
				"tags": ["Subscriptions"],
				"summary": "Retrieve a single subscription",
				"operationId": "ApiV2AccountsByAccountIdSubscriptionsByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "accountId",
					"in": "path",
					"description": "The ID of the account that owns this subscription",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The primary key of this subscription",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SubscriptionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/accounts/{accountId}/users": {
			"get": {
				"tags": ["Users"],
				"summary": "Retrieve users for this account",
				"operationId": "ApiV2AccountsByAccountIdUsersGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "accountId",
					"in": "path",
					"description": "The accountID of the user you wish to list.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$include",
					"in": "query",
					"description": "A comma separated list of child objects to return underneath the primary object.",
					"required": false,
					"type": "string"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[UserModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/accounts/{accountId}/users/{id}": {
			"get": {
				"tags": ["Users"],
				"summary": "Retrieve a single user",
				"operationId": "ApiV2AccountsByAccountIdUsersByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "The ID of the user to retrieve.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "accountId",
					"in": "path",
					"description": "The accountID of the user you wish to get.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$include",
					"in": "query",
					"description": "A comma separated list of child objects to return underneath the primary object.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"put": {
				"tags": ["Users"],
				"summary": "Update a single user",
				"operationId": "ApiV2AccountsByAccountIdUsersByIdPut",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The user object you wish to update.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/UserModel"
					}
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the user you wish to update.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "accountId",
					"in": "path",
					"description": "The accountID of the user you wish to update.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AccountModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/accounts/{accountId}/users/{id}/entitlements": {
			"get": {
				"tags": ["Users"],
				"summary": "Retrieve all entitlements for a single user",
				"operationId": "ApiV2AccountsByAccountIdUsersByIdEntitlementsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "The ID of the user to retrieve.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "accountId",
					"in": "path",
					"description": "The accountID of the user you wish to get.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UserEntitlementModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/accounts/{id}": {
			"get": {
				"tags": ["Accounts"],
				"summary": "Retrieve a single account",
				"operationId": "ApiV2AccountsByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "The ID of the account to retrieve.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$include",
					"in": "query",
					"description": "A comma separated list of child objects to return underneath the primary object.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AccountModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/accounts/{id}/resetlicensekey": {
			"post": {
				"tags": ["Accounts"],
				"summary": "Reset this account's license key",
				"operationId": "ApiV2AccountsByIdResetlicensekeyPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "request",
					"in": "body",
					"description": "A request confirming that you wish to reset the license key of this account.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ResetLicenseKeyModel"
					}
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the account you wish to update.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/LicenseKeyModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/addresses/resolve": {
			"post": {
				"tags": ["Addresses"],
				"summary": "Retrieve geolocation information for a specified address",
				"operationId": "ApiV2AddressesResolvePost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "request",
					"in": "body",
					"description": "The address to resolve",
					"required": false,
					"schema": {
						"$ref": "#/definitions/AddressInfo"
					}
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AddressResolutionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/batches": {
			"get": {
				"tags": ["Batches"],
				"summary": "Retrieve all batch type templates now",
				"operationId": "ApiV2BatchesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[BatchModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies": {
			"get": {
				"tags": ["Companies"],
				"summary": "Retrieve all companies",
				"operationId": "ApiV2CompaniesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$include",
					"in": "query",
					"description": "A comma separated list of child objects to return underneath the primary object.",
					"required": false,
					"type": "string"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[CompanyModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"post": {
				"tags": ["Companies"],
				"summary": "Create new companies",
				"operationId": "ApiV2CompaniesPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "models",
					"in": "body",
					"description": "Either a single company object or an array of companies to create",
					"required": false,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/CompanyModel"
						}
					}
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyModel"
							}
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyCode}/transactions": {
			"get": {
				"tags": ["Transactions"],
				"summary": "Retrieve all transactions",
				"operationId": "ApiV2CompaniesByCompanyCodeTransactionsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyCode",
					"in": "path",
					"description": "The company code of the company that recorded this transaction",
					"required": true,
					"type": "string"
				},
				{
					"name": "$include",
					"in": "query",
					"description": "A comma separated list of child objects to return underneath the primary object.",
					"required": false,
					"type": "string"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[TransactionModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}": {
			"get": {
				"tags": ["Transactions"],
				"summary": "Retrieve a single transaction by code",
				"operationId": "ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyCode",
					"in": "path",
					"description": "The company code of the company that recorded this transaction",
					"required": true,
					"type": "string"
				},
				{
					"name": "transactionCode",
					"in": "path",
					"description": "The transaction code to retrieve",
					"required": true,
					"type": "string"
				},
				{
					"name": "$include",
					"in": "query",
					"description": "A comma separated list of child objects to return underneath the primary object.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/adjust": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Correct a previously created transaction",
				"operationId": "ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeAdjustPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "companyCode",
					"in": "path",
					"description": "The company code of the company that recorded this transaction",
					"required": true,
					"type": "string"
				},
				{
					"name": "transactionCode",
					"in": "path",
					"description": "The transaction code to adjust",
					"required": true,
					"type": "string"
				},
				{
					"name": "model",
					"in": "body",
					"description": "The adjustment you wish to make",
					"required": false,
					"schema": {
						"$ref": "#/definitions/AdjustTransactionModel"
					}
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/changecode": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Change a transaction's code",
				"operationId": "ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeChangecodePost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "companyCode",
					"in": "path",
					"description": "The company code of the company that recorded this transaction",
					"required": true,
					"type": "string"
				},
				{
					"name": "transactionCode",
					"in": "path",
					"description": "The transaction code to change",
					"required": true,
					"type": "string"
				},
				{
					"name": "model",
					"in": "body",
					"description": "The code change request you wish to execute",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ChangeTransactionCodeModel"
					}
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/commit": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Commit a transaction for reporting",
				"operationId": "ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeCommitPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "companyCode",
					"in": "path",
					"description": "The company code of the company that recorded this transaction",
					"required": true,
					"type": "string"
				},
				{
					"name": "transactionCode",
					"in": "path",
					"description": "The transaction code to commit",
					"required": true,
					"type": "string"
				},
				{
					"name": "model",
					"in": "body",
					"description": "The commit request you wish to execute",
					"required": false,
					"schema": {
						"$ref": "#/definitions/CommitTransactionModel"
					}
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/settle": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Perform multiple actions on a transaction",
				"description": "Performs the same functions as /verify, /changecode, and /commit.  You may specify one or many actions in each call to this endpoint.",
				"operationId": "ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeSettlePost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "companyCode",
					"in": "path",
					"description": "The company code of the company that recorded this transaction",
					"required": true,
					"type": "string"
				},
				{
					"name": "transactionCode",
					"in": "path",
					"description": "The transaction code to settle",
					"required": true,
					"type": "string"
				},
				{
					"name": "model",
					"in": "body",
					"description": "The settle request containing the actions you wish to execute",
					"required": false,
					"schema": {
						"$ref": "#/definitions/SettleTransactionModel"
					}
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/verify": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Verify a transaction",
				"operationId": "ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeVerifyPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "companyCode",
					"in": "path",
					"description": "The company code of the company that recorded this transaction",
					"required": true,
					"type": "string"
				},
				{
					"name": "transactionCode",
					"in": "path",
					"description": "The transaction code to settle",
					"required": true,
					"type": "string"
				},
				{
					"name": "model",
					"in": "body",
					"description": "The settle request you wish to execute",
					"required": false,
					"schema": {
						"$ref": "#/definitions/VerifyTransactionModel"
					}
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyCode}/transactions/{transactionCode}/void": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Void a transaction",
				"operationId": "ApiV2CompaniesByCompanyCodeTransactionsByTransactionCodeVoidPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "companyCode",
					"in": "path",
					"description": "The company code of the company that recorded this transaction",
					"required": true,
					"type": "string"
				},
				{
					"name": "transactionCode",
					"in": "path",
					"description": "The transaction code to void",
					"required": true,
					"type": "string"
				},
				{
					"name": "model",
					"in": "body",
					"description": "The void request you wish to execute",
					"required": false,
					"schema": {
						"$ref": "#/definitions/VoidTransactionModel"
					}
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/batches": {
			"get": {
				"tags": ["Batches"],
				"summary": "Retrieve all batches for this company",
				"operationId": "ApiV2CompaniesByCompanyIdBatchesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns these batches",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[BatchModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"post": {
				"tags": ["Batches"],
				"summary": "Create a new batch",
				"operationId": "ApiV2CompaniesByCompanyIdBatchesPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "models",
					"in": "body",
					"description": "The batch you wish to create.",
					"required": false,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/BatchModel"
						}
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this batch.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/BatchModel"
							}
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/batches/{id}": {
			"get": {
				"tags": ["Batches"],
				"summary": "Retrieve a single batch",
				"operationId": "ApiV2CompaniesByCompanyIdBatchesByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this batch",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The primary key of this batch",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/BatchModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"put": {
				"tags": ["Batches"],
				"summary": "Update a single batch",
				"operationId": "ApiV2CompaniesByCompanyIdBatchesByIdPut",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The batch you wish to update.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/BatchModel"
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that this batch belongs to.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the batch you wish to update",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/BatchModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"delete": {
				"tags": ["Batches"],
				"summary": "Delete a single batch",
				"operationId": "ApiV2CompaniesByCompanyIdBatchesByIdDelete",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this batch.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the batch you wish to delete.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/contacts": {
			"get": {
				"tags": ["Contacts"],
				"summary": "Retrieve contacts for this company",
				"operationId": "ApiV2CompaniesByCompanyIdContactsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns these contacts",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[ContactModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"post": {
				"tags": ["Contacts"],
				"summary": "Create a new contact",
				"operationId": "ApiV2CompaniesByCompanyIdContactsPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "models",
					"in": "body",
					"description": "The contacts you wish to create.",
					"required": false,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/ContactModel"
						}
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this contact.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContactModel"
							}
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/contacts/{id}": {
			"get": {
				"tags": ["Contacts"],
				"summary": "Retrieve a single contact",
				"operationId": "ApiV2CompaniesByCompanyIdContactsByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this contact",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The primary key of this contact",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ContactModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"put": {
				"tags": ["Contacts"],
				"summary": "Update a single contact",
				"operationId": "ApiV2CompaniesByCompanyIdContactsByIdPut",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The contact you wish to update.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ContactModel"
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that this contact belongs to.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the contact you wish to update",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ContactModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"delete": {
				"tags": ["Contacts"],
				"summary": "Delete a single contact",
				"operationId": "ApiV2CompaniesByCompanyIdContactsByIdDelete",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this contact.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the contact you wish to delete.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/items": {
			"get": {
				"tags": ["Items"],
				"summary": "Retrieve items for this company",
				"operationId": "ApiV2CompaniesByCompanyIdItemsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns these items",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[ItemModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"post": {
				"tags": ["Items"],
				"summary": "Create a new item",
				"operationId": "ApiV2CompaniesByCompanyIdItemsPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "models",
					"in": "body",
					"description": "The item you wish to create.",
					"required": false,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/ItemModel"
						}
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this item.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ItemModel"
							}
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/items/{id}": {
			"get": {
				"tags": ["Items"],
				"summary": "Retrieve a single item",
				"operationId": "ApiV2CompaniesByCompanyIdItemsByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this item object",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The primary key of this item",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ItemModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"put": {
				"tags": ["Items"],
				"summary": "Update a single item",
				"operationId": "ApiV2CompaniesByCompanyIdItemsByIdPut",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The item object you wish to update.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ItemModel"
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that this item belongs to.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the item you wish to update",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ItemModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"delete": {
				"tags": ["Items"],
				"summary": "Delete a single item",
				"operationId": "ApiV2CompaniesByCompanyIdItemsByIdDelete",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this item.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the item you wish to delete.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/locations": {
			"get": {
				"tags": ["Locations"],
				"summary": "Retrieve locations for this company",
				"operationId": "ApiV2CompaniesByCompanyIdLocationsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns these locations",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[LocationModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"post": {
				"tags": ["Locations"],
				"summary": "Create a new location",
				"operationId": "ApiV2CompaniesByCompanyIdLocationsPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "models",
					"in": "body",
					"description": "The location you wish to create.",
					"required": false,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/LocationModel"
						}
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this location.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/LocationModel"
							}
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/locations/{id}": {
			"get": {
				"tags": ["Locations"],
				"summary": "Retrieve a single location",
				"operationId": "ApiV2CompaniesByCompanyIdLocationsByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this location",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The primary key of this location",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/LocationModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"put": {
				"tags": ["Locations"],
				"summary": "Update a single location",
				"operationId": "ApiV2CompaniesByCompanyIdLocationsByIdPut",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The location you wish to update.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/LocationModel"
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that this location belongs to.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the location you wish to update",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/LocationModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"delete": {
				"tags": ["Locations"],
				"summary": "Delete a single location",
				"operationId": "ApiV2CompaniesByCompanyIdLocationsByIdDelete",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this location.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the location you wish to delete.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/locations/{id}/validate": {
			"get": {
				"tags": ["Locations"],
				"summary": "Validate the location against local requirements",
				"operationId": "ApiV2CompaniesByCompanyIdLocationsByIdValidateGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this location",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The primary key of this location",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/LocationValidationModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/nexus": {
			"get": {
				"tags": ["Nexus"],
				"summary": "Retrieve nexus for this company",
				"operationId": "ApiV2CompaniesByCompanyIdNexusGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns these nexus objects",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"post": {
				"tags": ["Nexus"],
				"summary": "Create a new nexus",
				"operationId": "ApiV2CompaniesByCompanyIdNexusPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "models",
					"in": "body",
					"description": "The nexus you wish to create.",
					"required": false,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/NexusModel"
						}
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this nexus.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/NexusModel"
							}
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/nexus/{id}": {
			"get": {
				"tags": ["Nexus"],
				"summary": "Retrieve a single nexus",
				"operationId": "ApiV2CompaniesByCompanyIdNexusByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this nexus object",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The primary key of this nexus",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/NexusModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"put": {
				"tags": ["Nexus"],
				"summary": "Update a single nexus",
				"operationId": "ApiV2CompaniesByCompanyIdNexusByIdPut",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The nexus object you wish to update.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/NexusModel"
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that this nexus belongs to.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the nexus you wish to update",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/NexusModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"delete": {
				"tags": ["Nexus"],
				"summary": "Delete a single nexus",
				"operationId": "ApiV2CompaniesByCompanyIdNexusByIdDelete",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this nexus.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the nexus you wish to delete.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/settings": {
			"get": {
				"tags": ["Settings"],
				"summary": "Retrieve all settings for this company",
				"operationId": "ApiV2CompaniesByCompanyIdSettingsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns these settings",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[SettingModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"post": {
				"tags": ["Settings"],
				"summary": "Create a new setting",
				"operationId": "ApiV2CompaniesByCompanyIdSettingsPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "models",
					"in": "body",
					"description": "The setting you wish to create.",
					"required": false,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/SettingModel"
						}
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this setting.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/SettingModel"
							}
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/settings/{id}": {
			"get": {
				"tags": ["Settings"],
				"summary": "Retrieve a single setting",
				"operationId": "ApiV2CompaniesByCompanyIdSettingsByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this setting",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The primary key of this setting",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SettingModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"put": {
				"tags": ["Settings"],
				"summary": "Update a single setting",
				"operationId": "ApiV2CompaniesByCompanyIdSettingsByIdPut",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The setting you wish to update.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/SettingModel"
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that this setting belongs to.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the setting you wish to update",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SettingModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"delete": {
				"tags": ["Settings"],
				"summary": "Delete a single setting",
				"operationId": "ApiV2CompaniesByCompanyIdSettingsByIdDelete",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this setting.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the setting you wish to delete.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/taxcodes": {
			"get": {
				"tags": ["TaxCodes"],
				"summary": "Retrieve tax codes for this company",
				"operationId": "ApiV2CompaniesByCompanyIdTaxcodesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns these tax codes",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxCodeModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"post": {
				"tags": ["TaxCodes"],
				"summary": "Create a new tax code",
				"operationId": "ApiV2CompaniesByCompanyIdTaxcodesPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "models",
					"in": "body",
					"description": "The tax code you wish to create.",
					"required": false,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/TaxCodeModel"
						}
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this tax code.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TaxCodeModel"
							}
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/taxcodes/{id}": {
			"get": {
				"tags": ["TaxCodes"],
				"summary": "Retrieve a single tax code",
				"operationId": "ApiV2CompaniesByCompanyIdTaxcodesByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this tax code",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The primary key of this tax code",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TaxCodeModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"put": {
				"tags": ["TaxCodes"],
				"summary": "Update a single tax code",
				"operationId": "ApiV2CompaniesByCompanyIdTaxcodesByIdPut",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The tax code you wish to update.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/TaxCodeModel"
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that this tax code belongs to.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the tax code you wish to update",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TaxCodeModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"delete": {
				"tags": ["TaxCodes"],
				"summary": "Delete a single tax code",
				"operationId": "ApiV2CompaniesByCompanyIdTaxcodesByIdDelete",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this tax code.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the tax code you wish to delete.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/taxrules": {
			"get": {
				"tags": ["TaxRules"],
				"summary": "Retrieve tax rules for this company",
				"operationId": "ApiV2CompaniesByCompanyIdTaxrulesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns these tax rules",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxRuleModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"post": {
				"tags": ["TaxRules"],
				"summary": "Create a new tax rule",
				"operationId": "ApiV2CompaniesByCompanyIdTaxrulesPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "models",
					"in": "body",
					"description": "The tax rule you wish to create.",
					"required": false,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/TaxRuleModel"
						}
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this tax rule.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TaxRuleModel"
							}
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/taxrules/{id}": {
			"get": {
				"tags": ["TaxRules"],
				"summary": "Retrieve a single tax rule",
				"operationId": "ApiV2CompaniesByCompanyIdTaxrulesByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this tax rule",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The primary key of this tax rule",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TaxRuleModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"put": {
				"tags": ["TaxRules"],
				"summary": "Update a single tax rule",
				"operationId": "ApiV2CompaniesByCompanyIdTaxrulesByIdPut",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The tax rule you wish to update.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/TaxRuleModel"
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that this tax rule belongs to.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the tax rule you wish to update",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TaxRuleModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"delete": {
				"tags": ["TaxRules"],
				"summary": "Delete a single tax rule",
				"operationId": "ApiV2CompaniesByCompanyIdTaxrulesByIdDelete",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this tax rule.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the tax rule you wish to delete.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/upcs": {
			"get": {
				"tags": ["Upcs"],
				"summary": "Retrieve UPCs for this company",
				"operationId": "ApiV2CompaniesByCompanyIdUpcsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns these UPCs",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[UPCModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"post": {
				"tags": ["Upcs"],
				"summary": "Create a new UPC",
				"operationId": "ApiV2CompaniesByCompanyIdUpcsPost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "models",
					"in": "body",
					"description": "The UPC you wish to create.",
					"required": false,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/UPCModel"
						}
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this UPC.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UPCModel"
							}
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{companyId}/upcs/{id}": {
			"get": {
				"tags": ["Upcs"],
				"summary": "Retrieve a single UPC",
				"operationId": "ApiV2CompaniesByCompanyIdUpcsByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this UPC",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The primary key of this UPC",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UPCModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"put": {
				"tags": ["Upcs"],
				"summary": "Update a single UPC",
				"operationId": "ApiV2CompaniesByCompanyIdUpcsByIdPut",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The UPC you wish to update.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/UPCModel"
					}
				},
				{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that this UPC belongs to.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the UPC you wish to update",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UPCModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"delete": {
				"tags": ["Upcs"],
				"summary": "Delete a single UPC",
				"operationId": "ApiV2CompaniesByCompanyIdUpcsByIdDelete",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "companyId",
					"in": "path",
					"description": "The ID of the company that owns this UPC.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the UPC you wish to delete.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/{id}": {
			"get": {
				"tags": ["Companies"],
				"summary": "Retrieve a single company",
				"operationId": "ApiV2CompaniesByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "The ID of the company to retrieve.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$include",
					"in": "query",
					"description": "A comma separated list of child objects to return underneath the primary object.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CompanyModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"put": {
				"tags": ["Companies"],
				"summary": "Update a single company",
				"operationId": "ApiV2CompaniesByIdPut",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The company object you wish to update.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/CompanyModel"
					}
				},
				{
					"name": "id",
					"in": "path",
					"description": "The ID of the company you wish to update.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CompanyModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			},
			"delete": {
				"tags": ["Companies"],
				"summary": "Delete a single company",
				"description": "Deleting a company will delete all child companies, and all users attached to this company.",
				"operationId": "ApiV2CompaniesByIdDelete",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "The ID of the company you wish to delete.",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/companies/initialize": {
			"post": {
				"tags": ["Companies"],
				"summary": "Quick setup for a company with a single physical address",
				"operationId": "ApiV2CompaniesInitializePost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "Information about the company you wish to create.",
					"required": false,
					"schema": {
						"$ref": "#/definitions/CompanyInitializationModel"
					}
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CompanyModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/contacts": {
			"get": {
				"tags": ["Contacts"],
				"summary": "Retrieve all contacts",
				"operationId": "ApiV2ContactsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[ContactModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/locationquestions": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the list of questions that are required for a tax location",
				"operationId": "ApiV2DefinitionsLocationquestionsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "line1",
					"in": "query",
					"description": "The first line of this location's address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "line2",
					"in": "query",
					"description": "The second line of this location's address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "line3",
					"in": "query",
					"description": "The third line of this location's address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "city",
					"in": "query",
					"description": "The city part of this location's address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "region",
					"in": "query",
					"description": "The region, state, or province part of this location's address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "postalCode",
					"in": "query",
					"description": "The postal code of this location's address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "country",
					"in": "query",
					"description": "The country part of this location's address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "latitude",
					"in": "query",
					"description": "Optionally identify the location via latitude/longitude instead of via address.",
					"required": false,
					"type": "number",
					"format": "double"
				},
				{
					"name": "longitude",
					"in": "query",
					"description": "Optionally identify the location via latitude/longitude instead of via address.",
					"required": false,
					"type": "number",
					"format": "double"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[LocationQuestionModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/nexus": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported nexus for all countries and regions.",
				"operationId": "ApiV2DefinitionsNexusGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/nexus/{country}": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported nexus for a country.",
				"operationId": "ApiV2DefinitionsNexusByCountryGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "country",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/nexus/{country}/{region}": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported nexus for a country and region.",
				"operationId": "ApiV2DefinitionsNexusByCountryByRegionGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "country",
					"in": "path",
					"description": "The two-character ISO-3166 code for the country.",
					"required": true,
					"type": "string"
				},
				{
					"name": "region",
					"in": "path",
					"description": "The two or three character region code for the region.",
					"required": true,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/nexus/byaddress": {
			"get": {
				"tags": ["Definitions"],
				"summary": "List all nexus that apply to a specific address.",
				"operationId": "ApiV2DefinitionsNexusByaddressGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "line1",
					"in": "query",
					"description": "The first address line portion of this address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "line2",
					"in": "query",
					"description": "The first address line portion of this address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "line3",
					"in": "query",
					"description": "The first address line portion of this address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "city",
					"in": "query",
					"description": "The city portion of this address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "region",
					"in": "query",
					"description": "The region, state, or province code portion of this address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "postalCode",
					"in": "query",
					"description": "The postal code or zip code portion of this address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "country",
					"in": "query",
					"description": "The two-character ISO-3166 code of the country portion of this address.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/parameters": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported extra parameters for creating transactions.",
				"operationId": "ApiV2DefinitionsParametersGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[ParameterModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/permissions": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported permissions",
				"operationId": "ApiV2DefinitionsPermissionsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[String]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/securityroles": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported permissions",
				"operationId": "ApiV2DefinitionsSecurityrolesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[SecurityRoleModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/subscriptiontypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported subscription types",
				"operationId": "ApiV2DefinitionsSubscriptiontypesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[SubscriptionTypeModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/taxauthorities": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax authorities.",
				"operationId": "ApiV2DefinitionsTaxauthoritiesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxAuthorityModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/taxauthorityforms": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax authorities.",
				"operationId": "ApiV2DefinitionsTaxauthorityformsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxAuthorityFormModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/taxcodes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax codes.",
				"operationId": "ApiV2DefinitionsTaxcodesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxCodeModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/definitions/taxcodetypes": {
			"get": {
				"tags": ["Definitions"],
				"summary": "Retrieve the full list of Avalara-supported tax code types.",
				"operationId": "ApiV2DefinitionsTaxcodetypesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TaxCodeTypesModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/items": {
			"get": {
				"tags": ["Items"],
				"summary": "Retrieve all items",
				"operationId": "ApiV2ItemsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[ItemModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/locations": {
			"get": {
				"tags": ["Locations"],
				"summary": "Retrieve all locations",
				"operationId": "ApiV2LocationsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[LocationModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/nexus": {
			"get": {
				"tags": ["Nexus"],
				"summary": "Retrieve all nexus",
				"operationId": "ApiV2NexusGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[NexusModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/passwords": {
			
		},
		"/api/v2/passwords/{userId}/reset": {
			
		},
		"/api/v2/settings": {
			"get": {
				"tags": ["Settings"],
				"summary": "Retrieve all settings",
				"operationId": "ApiV2SettingsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[SettingModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/subscriptions": {
			"get": {
				"tags": ["Subscriptions"],
				"summary": "Retrieve all subscriptions",
				"operationId": "ApiV2SubscriptionsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[SubscriptionModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/taxcodes": {
			"get": {
				"tags": ["TaxCodes"],
				"summary": "Retrieve all tax codes",
				"operationId": "ApiV2TaxcodesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxCodeModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/taxrates/byaddress": {
			"get": {
				"tags": ["TaxRates"],
				"summary": "Retrieve tax rates for a specified address",
				"operationId": "ApiV2TaxratesByaddressGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "line1",
					"in": "query",
					"description": "The street address of the location.",
					"required": false,
					"type": "string"
				},
				{
					"name": "line2",
					"in": "query",
					"description": "The street address of the location.",
					"required": false,
					"type": "string"
				},
				{
					"name": "line3",
					"in": "query",
					"description": "The street address of the location.",
					"required": false,
					"type": "string"
				},
				{
					"name": "city",
					"in": "query",
					"description": "The city name of the location.",
					"required": false,
					"type": "string"
				},
				{
					"name": "region",
					"in": "query",
					"description": "The state or region of the location",
					"required": false,
					"type": "string"
				},
				{
					"name": "postalCode",
					"in": "query",
					"description": "The postal code of the location.",
					"required": false,
					"type": "string"
				},
				{
					"name": "country",
					"in": "query",
					"description": "The two letter ISO-3166 country code.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TaxRateModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/taxrates/bypostalcode": {
			"get": {
				"tags": ["TaxRates"],
				"summary": "Retrieve tax rates for a specified country and postal code",
				"operationId": "ApiV2TaxratesBypostalcodeGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "country",
					"in": "query",
					"description": "The two letter ISO-3166 country code.",
					"required": false,
					"type": "string"
				},
				{
					"name": "postalCode",
					"in": "query",
					"description": "The postal code of the location.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TaxRateModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/taxrules": {
			"get": {
				"tags": ["TaxRules"],
				"summary": "Retrieve all tax rules",
				"operationId": "ApiV2TaxrulesGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[TaxRuleModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/transactions/{id}": {
			"get": {
				"tags": ["Transactions"],
				"summary": "Retrieve a single transaction by ID",
				"operationId": "ApiV2TransactionsByIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "The unique ID number of the transaction to retrieve",
					"required": true,
					"type": "integer",
					"format": "int64"
				},
				{
					"name": "$include",
					"in": "query",
					"description": "A comma separated list of child objects to return underneath the primary object.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/transactions/create": {
			"post": {
				"tags": ["Transactions"],
				"summary": "Create a new transaction",
				"operationId": "ApiV2TransactionsCreatePost",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "model",
					"in": "body",
					"description": "The transaction you wish to create",
					"required": false,
					"schema": {
						"$ref": "#/definitions/CreateTransactionModel"
					}
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TransactionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/upcs": {
			"get": {
				"tags": ["Upcs"],
				"summary": "Retrieve all UPCs",
				"operationId": "ApiV2UpcsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[UPCModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/users": {
			"get": {
				"tags": ["Users"],
				"summary": "Retrieve all users",
				"operationId": "ApiV2UsersGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "$include",
					"in": "query",
					"description": "A comma separated list of child objects to return underneath the primary object.",
					"required": false,
					"type": "string"
				},
				{
					"name": "$filter",
					"in": "query",
					"description": "A filter statement to identify specific records to retrieve, as defined by https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering .",
					"required": false,
					"type": "string"
				},
				{
					"name": "$top",
					"in": "query",
					"description": "If nonzero, return no more than this number of results.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$skip",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "integer",
					"format": "int32"
				},
				{
					"name": "$orderBy",
					"in": "query",
					"description": "A comma separated list of sort statements in the format '(fieldname) [ASC|DESC]', for example 'id ASC'.",
					"required": false,
					"type": "string"
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FetchResult[UserModel]"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/utilities/ping": {
			"get": {
				"tags": ["Utilities"],
				"summary": "Tests connectivity and version of the service",
				"operationId": "ApiV2UtilitiesPingGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PingResultModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/utilities/subscriptions": {
			"get": {
				"tags": ["Utilities"],
				"summary": "List all services to which the current user is subscribed",
				"operationId": "ApiV2UtilitiesSubscriptionsGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SubscriptionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		},
		"/api/v2/utilities/subscriptions/{serviceTypeId}": {
			"get": {
				"tags": ["Utilities"],
				"summary": "Checks if the current user is subscribed to a specific service",
				"operationId": "ApiV2UtilitiesSubscriptionsByServiceTypeIdGet",
				"consumes": [],
				"produces": [],
				"parameters": [{
					"name": "serviceTypeId",
					"in": "path",
					"description": "The service to check",
					"required": true,
					"type": "string",
					"enum": ["None",
					"AvaTaxST",
					"AvaTaxPro",
					"AvaTaxGlobal",
					"AutoAddress",
					"AutoReturns",
					"TaxSolver",
					"AvaTaxCsp",
					"Twe",
					"Mrs",
					"AvaCert",
					"AuthorizationPartner",
					"CertCapture",
					"AvaUpc",
					"AvaCUT",
					"AvaLandedCost",
					"AvaLodging"]
				},
				{
					"name": "Authorization",
					"in": "header",
					"description": "Account Services v2 supports authentication via license key, username/password, and bearer token.  Please see <a href=\"http://developer.avalara.com/avatax/authentication-in-rest/\">Authentication in REST v2</a> for more information.",
					"required": false,
					"type": "string"
				},
				{
					"name": "X-Avalara-Client",
					"in": "header",
					"description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format '(app name); (app version); (library name); (library version); (machine name)'. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
					"required": false,
					"type": "string",
					"default": "Swagger UI; 2.16.11; Custom; 1.0"
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SubscriptionModel"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/ErrorResult"
						}
					}
				},
				"deprecated": false,
				"security": [{
					"UserSecurity": [],
					"ApiKeySecurity": [],
					"OauthSecurity": []
				}]
			}
		}
	},
	"definitions": {
		"AccountModel": {
			"description": "An AvaTax account.",
			"required": ["id",
			"name"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number assigned to this account.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"name": {
					"description": "The name of this account.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Test Account"
				},
				"effectiveDate": {
					"format": "date-time",
					"description": "The earliest date on which this account may be used.",
					"type": "string",
					"example": "2016-10-29T00:00:00-07:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "If this account has been closed, this is the last date the account was open.",
					"type": "string"
				},
				"accountStatusId": {
					"description": "The current status of this account.",
					"enum": ["Inactive",
					"Active",
					"Test",
					"New"],
					"type": "string",
					"example": 2
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"subscriptions": {
					"description": "Optional: A list of subscriptions granted to this account.  To fetch this list, add the query string \"?$include=Subscriptions\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/SubscriptionModel"
					}
				},
				"users": {
					"description": "Optional: A list of all the users belonging to this account.  To fetch this list, add the query string \"?$include=Users\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserModel"
					}
				}
			},
			"example": {
				"id": 12345,
				"name": "Test Account",
				"effectiveDate": "2016-10-29T00:00:00-07:00",
				"accountStatusId": "Test"
			}
		},
		"SubscriptionModel": {
			"description": "Represents a service that this account has subscribed to.",
			"required": ["id",
			"accountId"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this subscription.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"accountId": {
					"format": "int32",
					"description": "The unique ID number of the account this subscription belongs to.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"subscriptionTypeId": {
					"format": "int32",
					"description": "The unique ID number of the service that the account is subscribed to.",
					"type": "integer",
					"example": 2
				},
				"subscriptionDescription": {
					"description": "A friendly description of the service that the account is subscribed to.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "AvaTaxPro"
				},
				"effectiveDate": {
					"format": "date-time",
					"description": "The date when the subscription began.",
					"type": "string",
					"example": "2015-01-01T00:00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "If the subscription has ended or will end, this date indicates when the subscription ends.",
					"type": "string"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 12345,
				"accountId": 123456789,
				"subscriptionTypeId": 2,
				"subscriptionDescription": "AvaTaxPro",
				"effectiveDate": "2015-01-01T00:00:00"
			}
		},
		"UserModel": {
			"description": "An account user who is permitted to use AvaTax.",
			"required": ["id",
			"accountId",
			"userName",
			"email",
			"postalCode",
			"securityRoleId"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this user.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"accountId": {
					"format": "int32",
					"description": "The unique ID number of the account to which this user belongs.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"companyId": {
					"format": "int32",
					"description": "If this user is locked to one company (and its children), this is the unique ID number of the company to which this user belongs.",
					"type": "integer",
					"example": 123456
				},
				"userName": {
					"description": "The username which is used to log on to the AvaTax website, or to authenticate against API calls.",
					"maxLength": 50,
					"minLength": 5,
					"type": "string",
					"readOnly": true
				},
				"firstName": {
					"description": "The first or given name of the user.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Bob"
				},
				"lastName": {
					"description": "The last or family name of the user.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Example"
				},
				"email": {
					"description": "The email address to be used to contact this user.  If the user has forgotten a password, an email can be sent to this email address with information on how to reset this password.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "bob@example.org"
				},
				"postalCode": {
					"description": "The postal code in which this user resides.",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": "98110"
				},
				"securityRoleId": {
					"description": "The security level for this user.",
					"enum": ["NoAccess",
					"SiteAdmin",
					"AccountOperator",
					"AccountAdmin",
					"AccountUser",
					"SystemAdmin",
					"Registrar",
					"CSPTester",
					"CSPAdmin",
					"SystemOperator",
					"TechnicalSupportUser",
					"TechnicalSupportAdmin",
					"TreasuryUser",
					"TreasuryAdmin",
					"ComplianceUser",
					"ComplianceAdmin",
					"ProStoresOperator",
					"CompanyUser",
					"CompanyAdmin",
					"ComplianceTempUser",
					"ComplianceRootUser",
					"ComplianceOperator",
					"SSTAdmin"],
					"type": "string",
					"example": 4
				},
				"passwordStatus": {
					"description": "The status of the user's password.",
					"enum": ["UserCannotChange",
					"UserCanChange",
					"UserMustChange"],
					"type": "string",
					"example": 1
				},
				"isActive": {
					"description": "True if this user is currently active.",
					"type": "boolean",
					"example": true
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 12345,
				"accountId": 123456789,
				"companyId": 123456,
				"firstName": "Bob",
				"lastName": "Example",
				"email": "bob@example.org",
				"postalCode": "98110",
				"securityRoleId": "AccountUser",
				"passwordStatus": "UserCanChange",
				"isActive": true
			}
		},
		"ErrorResult": {
			"description": "Helper function for throwing known error response",
			"type": "object",
			"properties": {
				"error": {
					"$ref": "#/definitions/ErrorInfo",
					"description": "Information about the error(s)",
					"example": {
						"code": "DuplicateCompanyCode",
						"message": "The company code 'DEFAULT' has already been defined.  Please select a different company code.",
						"target": "HttpRequest",
						"details": [{
							"code": "DuplicateCompanyCode",
							"number": 142,
							"message": "The company code 'DEFAULT' has already been defined.",
							"description": "Please select a different company code.",
							"faultCode": "Client",
							"helpLink": "http://developer.avalara.com/avatax/errors/DuplicateCompanyCode",
							"severity": "Error"
						}]
					}
				}
			},
			"example": {
				"error": {
					"code": "DuplicateCompanyCode",
					"message": "The company code 'DEFAULT' has already been defined.  Please select a different company code.",
					"target": "HttpRequest",
					"details": [{
						"code": "DuplicateCompanyCode",
						"number": 142,
						"message": "The company code 'DEFAULT' has already been defined.",
						"description": "Please select a different company code.",
						"faultCode": "Client",
						"helpLink": "http://developer.avalara.com/avatax/errors/DuplicateCompanyCode",
						"severity": "Error"
					}]
				}
			}
		},
		"ErrorInfo": {
			"description": "Information about the error that occurred",
			"type": "object",
			"properties": {
				"code": {
					"description": "Type of error that occurred",
					"enum": ["ServerConfiguration",
					"EntityNotFoundError",
					"ValueRequiredError",
					"RangeError",
					"RangeCompareError",
					"RangeSetError",
					"TaxpayerNumberRequired",
					"PasswordMinComplexityError",
					"StringLengthError",
					"EmailValidationError",
					"EmailMissingError",
					"ParserFieldNameError",
					"ParserFieldValueError",
					"ParserSyntaxError",
					"ParserTooManyParametersError",
					"ParserUnterminatedValueError",
					"DeleteUserSelfError",
					"OldPasswordInvalid",
					"CannotChangePassword",
					"CannotChangeCompanyCode",
					"AuthenticationException",
					"AuthorizationException",
					"ValidationException",
					"InactiveUserError",
					"AuthenticationIncomplete",
					"BasicAuthIncorrect",
					"IdentityServerError",
					"BearerTokenInvalid",
					"ModelRequiredException",
					"AccountExpiredException",
					"VisibilityError",
					"BearerTokenNotSupported",
					"InvalidSecurityRole",
					"InvalidRegistrarAction",
					"RemoteServerError",
					"NoFilterCriteriaException",
					"OpenClauseException",
					"JsonFormatError",
					"UnhandledException",
					"ReportingCompanyMustHaveContactsError",
					"CompanyProfileNotSet",
					"ModelStateInvalid",
					"DateRangeError",
					"InvalidDateRangeError",
					"DeleteInformation",
					"CannotCreateDeletedObjects",
					"CannotModifyDeletedObjects",
					"ReturnNameNotFound",
					"InvalidAddressTypeAndCategory",
					"DefaultCompanyLocation",
					"InvalidCountry",
					"InvalidCountryRegion",
					"BrazilValidationError",
					"BrazilExemptValidationError",
					"BrazilPisCofinsError",
					"JurisdictionNotFoundError",
					"MedicalExciseError",
					"RateDependsTaxabilityError",
					"RateDependsEuropeError",
					"RateTypeNotSupported",
					"CannotUpdateNestedObjects",
					"UPCCodeInvalidChars",
					"UPCCodeInvalidLength",
					"IncorrectPathError",
					"InvalidJurisdictionType",
					"MustConfirmResetLicenseKey",
					"DuplicateCompanyCode",
					"TINFormatError",
					"DuplicateNexusError",
					"UnknownNexusError",
					"ParentNexusNotFound",
					"InvalidTaxCodeType",
					"BatchSalesAuditMustBeZippedError",
					"BatchZipMustContainOneFileError",
					"BatchInvalidFileTypeError",
					"GetTaxError",
					"AddressConflictException",
					"DocumentCodeConflict",
					"MissingAddress",
					"InvalidParameter",
					"InvalidParameterValue",
					"CompanyCodeConflict",
					"BadDocumentFetch",
					"ServerUnreachable",
					"SubscriptionRequired"],
					"type": "string",
					"example": 142
				},
				"message": {
					"description": "Short one-line message to summaryize what went wrong",
					"type": "string",
					"example": "The company code 'DEFAULT' has already been defined.  Please select a different company code."
				},
				"target": {
					"description": "What object or service caused the error?",
					"enum": ["Unknown",
					"HttpRequest",
					"HttpRequestHeaders",
					"IncorrectData",
					"AvaTaxApiServer",
					"AvalaraIdentityServer",
					"CustomerAccountSetup"],
					"type": "string",
					"example": 1
				},
				"details": {
					"description": "Array of detailed error messages",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ErrorDetail"
					},
					"example": [{
						"code": "DuplicateCompanyCode",
						"number": 142,
						"message": "The company code 'DEFAULT' has already been defined.",
						"description": "Please select a different company code.",
						"faultCode": "Client",
						"helpLink": "http://developer.avalara.com/avatax/errors/DuplicateCompanyCode",
						"severity": "Error"
					}]
				}
			},
			"example": {
				"code": "DuplicateCompanyCode",
				"message": "The company code 'DEFAULT' has already been defined.  Please select a different company code.",
				"target": "HttpRequest",
				"details": [{
					"code": "DuplicateCompanyCode",
					"number": 142,
					"message": "The company code 'DEFAULT' has already been defined.",
					"description": "Please select a different company code.",
					"faultCode": "Client",
					"helpLink": "http://developer.avalara.com/avatax/errors/DuplicateCompanyCode",
					"severity": "Error"
				}]
			}
		},
		"ErrorDetail": {
			"description": "Message object",
			"type": "object",
			"properties": {
				"code": {
					"description": "Name of the error.",
					"enum": ["ServerConfiguration",
					"EntityNotFoundError",
					"ValueRequiredError",
					"RangeError",
					"RangeCompareError",
					"RangeSetError",
					"TaxpayerNumberRequired",
					"PasswordMinComplexityError",
					"StringLengthError",
					"EmailValidationError",
					"EmailMissingError",
					"ParserFieldNameError",
					"ParserFieldValueError",
					"ParserSyntaxError",
					"ParserTooManyParametersError",
					"ParserUnterminatedValueError",
					"DeleteUserSelfError",
					"OldPasswordInvalid",
					"CannotChangePassword",
					"CannotChangeCompanyCode",
					"AuthenticationException",
					"AuthorizationException",
					"ValidationException",
					"InactiveUserError",
					"AuthenticationIncomplete",
					"BasicAuthIncorrect",
					"IdentityServerError",
					"BearerTokenInvalid",
					"ModelRequiredException",
					"AccountExpiredException",
					"VisibilityError",
					"BearerTokenNotSupported",
					"InvalidSecurityRole",
					"InvalidRegistrarAction",
					"RemoteServerError",
					"NoFilterCriteriaException",
					"OpenClauseException",
					"JsonFormatError",
					"UnhandledException",
					"ReportingCompanyMustHaveContactsError",
					"CompanyProfileNotSet",
					"ModelStateInvalid",
					"DateRangeError",
					"InvalidDateRangeError",
					"DeleteInformation",
					"CannotCreateDeletedObjects",
					"CannotModifyDeletedObjects",
					"ReturnNameNotFound",
					"InvalidAddressTypeAndCategory",
					"DefaultCompanyLocation",
					"InvalidCountry",
					"InvalidCountryRegion",
					"BrazilValidationError",
					"BrazilExemptValidationError",
					"BrazilPisCofinsError",
					"JurisdictionNotFoundError",
					"MedicalExciseError",
					"RateDependsTaxabilityError",
					"RateDependsEuropeError",
					"RateTypeNotSupported",
					"CannotUpdateNestedObjects",
					"UPCCodeInvalidChars",
					"UPCCodeInvalidLength",
					"IncorrectPathError",
					"InvalidJurisdictionType",
					"MustConfirmResetLicenseKey",
					"DuplicateCompanyCode",
					"TINFormatError",
					"DuplicateNexusError",
					"UnknownNexusError",
					"ParentNexusNotFound",
					"InvalidTaxCodeType",
					"BatchSalesAuditMustBeZippedError",
					"BatchZipMustContainOneFileError",
					"BatchInvalidFileTypeError",
					"GetTaxError",
					"AddressConflictException",
					"DocumentCodeConflict",
					"MissingAddress",
					"InvalidParameter",
					"InvalidParameterValue",
					"CompanyCodeConflict",
					"BadDocumentFetch",
					"ServerUnreachable",
					"SubscriptionRequired"],
					"type": "string",
					"example": 142
				},
				"number": {
					"format": "int32",
					"description": "Error message identifier",
					"type": "integer",
					"example": 142
				},
				"message": {
					"description": "Concise summary of the message, suitable for display in the caption of an alert box.",
					"type": "string",
					"example": "The company code 'DEFAULT' has already been defined."
				},
				"description": {
					"description": "A more detailed description of the problem referenced by this error message, suitable for display in the contents area of an alert box.",
					"type": "string",
					"example": "Please select a different company code."
				},
				"faultCode": {
					"description": "Indicates the SoapFault code",
					"type": "string",
					"example": "Client"
				},
				"helpLink": {
					"description": "URL to help for this message",
					"type": "string",
					"readOnly": true,
					"example": "http://developer.avalara.com/avatax/errors/DuplicateCompanyCode"
				},
				"refersTo": {
					"description": "Item the message refers to, if applicable.  This is used to indicate a missing or incorrect value.",
					"type": "string"
				},
				"severity": {
					"description": "Severity of the message",
					"enum": ["Success",
					"Warning",
					"Error",
					"Exception"],
					"type": "string",
					"example": 2
				}
			},
			"example": {
				"code": "DuplicateCompanyCode",
				"number": 142,
				"message": "The company code 'DEFAULT' has already been defined.",
				"description": "Please select a different company code.",
				"faultCode": "Client",
				"helpLink": "http://developer.avalara.com/avatax/errors/DuplicateCompanyCode",
				"severity": "Error"
			}
		},
		"FetchResult[AccountModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccountModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"ResetLicenseKeyModel": {
			"description": "Represents a license key reset request.",
			"required": ["accountId",
			"confirmResetLicenseKey"],
			"type": "object",
			"properties": {
				"accountId": {
					"format": "int32",
					"description": "The primary key of the account ID to reset",
					"type": "integer",
					"example": 123456789
				},
				"confirmResetLicenseKey": {
					"description": "Set this value to true to reset the license key for this account.\r\n            This license key reset function will only work when called using the credentials of the account administrator of this account.",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"accountId": 123456789,
				"confirmResetLicenseKey": true
			}
		},
		"LicenseKeyModel": {
			"description": "Represents a license key for this account.",
			"type": "object",
			"properties": {
				"accountId": {
					"format": "int32",
					"description": "The primary key of the account",
					"type": "integer",
					"example": 123456789
				},
				"privateLicenseKey": {
					"description": "This is your private license key.  You must record this license key for safekeeping.\r\n            If you lose this key, you must contact the ResetLicenseKey API in order to request a new one.\r\n            Each account can only have one license key at a time.",
					"type": "string",
					"example": "742A02AA463CDE741E932EC365360CA3CF378BD9"
				},
				"httpRequestHeader": {
					"description": "If your software allows you to specify the HTTP Authorization header directly, this is the header string you \r\n            should use when contacting Avalara to make API calls with this license key.",
					"type": "string",
					"example": "Basic MTIzNDU2Nzg5Ojc0MkEwMkFBNDYzQ0RFNzQxRTkzMkVDMzY1MzYwQ0EzQ0YzNzhCRDk="
				}
			},
			"example": {
				"accountId": 123456789,
				"privateLicenseKey": "742A02AA463CDE741E932EC365360CA3CF378BD9",
				"httpRequestHeader": "Basic MTIzNDU2Nzg5Ojc0MkEwMkFBNDYzQ0RFNzQxRTkzMkVDMzY1MzYwQ0EzQ0YzNzhCRDk="
			}
		},
		"AddressInfo": {
			"description": "Represents an address to resolve.  \r\n            Note that there are no data validations on this model since malformed addresses will get \"best-guess\" resolution.",
			"type": "object",
			"properties": {
				"line1": {
					"description": "Line1",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "123 Main Street"
				},
				"line2": {
					"description": "Line2",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "Line3",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "City",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "State / Province / Region",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "CA"
				},
				"country": {
					"description": "Two character ISO 3166 Country Code",
					"maxLength": 2,
					"minLength": 2,
					"type": "string",
					"example": "US"
				},
				"postalCode": {
					"description": "Postal Code / Zip Code",
					"maxLength": 11,
					"minLength": 0,
					"type": "string",
					"example": "92615"
				},
				"latitude": {
					"format": "double",
					"description": "Geospatial latitude measurement",
					"type": "number"
				},
				"longitude": {
					"format": "double",
					"description": "Geospatial longitude measurement",
					"type": "number"
				}
			},
			"example": {
				"line1": "123 Main Street",
				"city": "Irvine",
				"region": "CA",
				"country": "US",
				"postalCode": "92615"
			}
		},
		"AddressResolutionModel": {
			"description": "Address Resolution Model",
			"type": "object",
			"properties": {
				"address": {
					"$ref": "#/definitions/AddressInfo",
					"description": "The original address",
					"example": {
						"line1": "123 Main Street",
						"city": "Irvine",
						"region": "CA",
						"country": "US",
						"postalCode": "92615"
					}
				},
				"validatedAddresses": {
					"description": "The validated address or addresses",
					"type": "array",
					"items": {
						"$ref": "#/definitions/AddressInfo"
					}
				},
				"coordinates": {
					"$ref": "#/definitions/CoordinateInfo",
					"description": "The geospatial coordinates of this address",
					"example": {
						"latitude": 33.684884,
						"longitude": -117.851321
					}
				},
				"resolutionQuality": {
					"description": "The resolution quality of the geospatial coordinates",
					"enum": ["NotCoded",
					"External",
					"CountryCentroid",
					"RegionCentroid",
					"PartialCentroid",
					"PostalCentroidGood",
					"PostalCentroidBetter",
					"PostalCentroidBest",
					"Intersection",
					"Interpolated",
					"Rooftop",
					"Constant"],
					"type": "string",
					"example": 10
				},
				"taxAuthorities": {
					"description": "List of informational and warning messages regarding this address",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxAuthorityInfo"
					}
				},
				"messages": {
					"description": "List of informational and warning messages regarding this address",
					"type": "array",
					"items": {
						"$ref": "#/definitions/AvaTaxMessage"
					},
					"example": [{
						"summary": "The address is not deliverable.",
						"details": "The physical location exists but there are no homes on this street. One reason might be railroad tracks or rivers running alongside this street, as they would prevent construction of homes in this location.",
						"refersTo": "address",
						"severity": "Error",
						"source": "Avalara.AvaTax.Services.Address"
					}]
				}
			},
			"example": {
				"address": {
					"line1": "123 Main Street",
					"city": "Irvine",
					"region": "CA",
					"country": "US",
					"postalCode": "92615"
				},
				"coordinates": {
					"latitude": 33.684884,
					"longitude": -117.851321
				},
				"resolutionQuality": "Rooftop",
				"messages": [{
					"summary": "The address is not deliverable.",
					"details": "The physical location exists but there are no homes on this street. One reason might be railroad tracks or rivers running alongside this street, as they would prevent construction of homes in this location.",
					"refersTo": "address",
					"severity": "Error",
					"source": "Avalara.AvaTax.Services.Address"
				}]
			}
		},
		"CoordinateInfo": {
			"description": "Coordinate Info",
			"type": "object",
			"properties": {
				"latitude": {
					"format": "double",
					"description": "Latitude",
					"type": "number",
					"example": 33.684884
				},
				"longitude": {
					"format": "double",
					"description": "Longitude",
					"type": "number",
					"example": -117.851321
				}
			},
			"example": {
				"latitude": 33.684884,
				"longitude": -117.851321
			}
		},
		"TaxAuthorityInfo": {
			"description": "Tax Authority Info",
			"required": ["jurisdictionName"],
			"type": "object",
			"properties": {
				"avalaraId": {
					"description": "Avalara Id",
					"type": "string",
					"example": "AGAM"
				},
				"jurisdictionName": {
					"description": "Jurisdiction Name",
					"maxLength": 128,
					"minLength": 0,
					"type": "string",
					"example": "CALIFORNIA"
				},
				"jurisdictionType": {
					"description": "Jurisdiction Type",
					"enum": ["Country",
					"Composite",
					"State",
					"County",
					"City",
					"Special"],
					"type": "string",
					"example": 1
				},
				"signatureCode": {
					"description": "Signature Code",
					"maxLength": 4,
					"minLength": 0,
					"type": "string",
					"example": "AGAM"
				}
			},
			"example": {
				"avalaraId": "AGAM",
				"jurisdictionName": "CALIFORNIA",
				"jurisdictionType": "State",
				"signatureCode": "AGAM"
			}
		},
		"AvaTaxMessage": {
			"description": "Informational or warning messages returned by AvaTax with a transaction",
			"type": "object",
			"properties": {
				"summary": {
					"description": "A brief summary of what this message tells us",
					"type": "string"
				},
				"details": {
					"description": "Detailed information that explains what the summary provided",
					"type": "string"
				},
				"refersTo": {
					"description": "Information about what object in your request this message refers to",
					"type": "string"
				},
				"severity": {
					"description": "A category that indicates how severely this message affects the results",
					"type": "string"
				},
				"source": {
					"description": "The name of the code or service that generated this message",
					"type": "string"
				}
			},
			"example": {
				
			}
		},
		"BatchModel": {
			"description": "Represents a batch of uploaded documents.",
			"required": ["id",
			"name",
			"accountId",
			"companyId",
			"type"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this batch.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"name": {
					"description": "The user-friendly readable name for this batch.",
					"maxLength": 194,
					"minLength": 0,
					"type": "string",
					"example": "TestBatch"
				},
				"accountId": {
					"format": "int32",
					"description": "The Account ID number of the account that owns this batch.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"companyId": {
					"format": "int32",
					"description": "The Company ID number of the company that owns this batch.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"type": {
					"description": "AvaTax supports a varity of batch file types e.g. TransactionImport; a type for loading multiple transactions for your company at one time. For more see AvaTax Use Cases - Batch File Reference",
					"enum": ["AvaCertUpdate",
					"AvaCertUpdateAll",
					"BatchMaintenance",
					"CompanyLocationImport",
					"DocumentImport",
					"ExemptCertImport",
					"ItemImport",
					"SalesAuditExport",
					"SstpTestDeckImport",
					"TaxRuleImport",
					"TransactionImport",
					"UPCBulkImport",
					"UPCValidationImport"],
					"type": "string",
					"example": 4
				},
				"status": {
					"description": "This batch's current processing status",
					"enum": ["Waiting",
					"SystemErrors",
					"Cancelled",
					"Completed",
					"Creating",
					"Deleted",
					"Errors",
					"Paused",
					"Processing"],
					"type": "string"
				},
				"options": {
					"description": "Any optional flags provided for this batch",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				},
				"batchAgent": {
					"description": "The agent used to create this batch",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "manual"
				},
				"startedDate": {
					"format": "date-time",
					"description": "The date/time when this batch started processing",
					"type": "string",
					"readOnly": true
				},
				"recordCount": {
					"format": "int32",
					"description": "The number of records in this batch; determined by the server",
					"type": "integer",
					"readOnly": true
				},
				"currentRecord": {
					"format": "int32",
					"description": "The current record being processed",
					"type": "integer",
					"readOnly": true
				},
				"completedDate": {
					"format": "date-time",
					"description": "The date/time when this batch was completely processed",
					"type": "string",
					"readOnly": true
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"files": {
					"description": "The list of files contained in this batch.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/BatchFileModel"
					},
					"example": [{
						"id": 56789,
						"batchId": 12345,
						"name": "samplebatch.csv",
						"content": "UHJvY2Vzc0NvZGUJRG9jQ29kZQlEb2NUeXBlCURvY0RhdGUJQ29tcGFueUNvZGUJQ3VzdG9tZXJDb2RlCUxpbmVObwlBbW91bnQJRGlzY291bnQJRGVzdFRheFJlZ2lvbglPcmlnVGF4UmVnaW9uDQozCTEyMzRzZGZ3MgkxCTYvNi8yMDE2CXdhcmVob3VzZQkxCTEJMTAwCTUJQkdVSAlBRk9a",
						"contentLength": 0,
						"contentType": "text/csv",
						"fileExtension": ".csv"
					}]
				}
			},
			"example": {
				"id": 0,
				"name": "TestBatch",
				"accountId": 12345,
				"companyId": 56789,
				"type": "DocumentImport",
				"batchAgent": "manual",
				"files": [{
					"id": 56789,
					"batchId": 12345,
					"name": "samplebatch.csv",
					"content": "UHJvY2Vzc0NvZGUJRG9jQ29kZQlEb2NUeXBlCURvY0RhdGUJQ29tcGFueUNvZGUJQ3VzdG9tZXJDb2RlCUxpbmVObwlBbW91bnQJRGlzY291bnQJRGVzdFRheFJlZ2lvbglPcmlnVGF4UmVnaW9uDQozCTEyMzRzZGZ3MgkxCTYvNi8yMDE2CXdhcmVob3VzZQkxCTEJMTAwCTUJQkdVSAlBRk9a",
					"contentLength": 0,
					"contentType": "text/csv",
					"fileExtension": ".csv"
				}]
			}
		},
		"BatchFileModel": {
			"description": "Represents one file in a batch upload.",
			"required": ["id",
			"name",
			"content",
			"contentType",
			"fileExtension"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number assigned to this batch file.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"batchId": {
					"format": "int32",
					"description": "The unique ID number of the batch that this file belongs to.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"name": {
					"description": "Logical Name of file (e.g. \"Input\" or \"Error\").",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "samplebatch.csv"
				},
				"content": {
					"format": "byte",
					"description": "Content of the batch file.",
					"type": "string",
					"example": "UHJvY2Vzc0NvZGUJRG9jQ29kZQlEb2NUeXBlCURvY0RhdGUJQ29tcGFueUNvZGUJQ3VzdG9tZXJDb2RlCUxpbmVObwlBbW91bnQJRGlzY291bnQJRGVzdFRheFJlZ2lvbglPcmlnVGF4UmVnaW9uDQozCTEyMzRzZGZ3MgkxCTYvNi8yMDE2CXdhcmVob3VzZQkxCTEJMTAwCTUJQkdVSAlBRk9a"
				},
				"contentLength": {
					"format": "int32",
					"description": "Size of content, in bytes.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"contentType": {
					"description": "Content mime type (e.g. text/csv).  This is used for HTTP downloading.",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "text/csv"
				},
				"fileExtension": {
					"description": "File extension (e.g. CSV).",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": ".csv"
				},
				"errorCount": {
					"format": "int32",
					"description": "Number of errors that occurred when processing this file.",
					"type": "integer"
				}
			},
			"example": {
				"id": 56789,
				"batchId": 12345,
				"name": "samplebatch.csv",
				"content": "UHJvY2Vzc0NvZGUJRG9jQ29kZQlEb2NUeXBlCURvY0RhdGUJQ29tcGFueUNvZGUJQ3VzdG9tZXJDb2RlCUxpbmVObwlBbW91bnQJRGlzY291bnQJRGVzdFRheFJlZ2lvbglPcmlnVGF4UmVnaW9uDQozCTEyMzRzZGZ3MgkxCTYvNi8yMDE2CXdhcmVob3VzZQkxCTEJMTAwCTUJQkdVSAlBRk9a",
				"contentLength": 0,
				"contentType": "text/csv",
				"fileExtension": ".csv"
			}
		},
		"FetchResult[BatchModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/BatchModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"CompanyModel": {
			"description": "A company or business entity.",
			"required": ["id",
			"accountId",
			"companyCode",
			"name",
			"defaultCountry"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this company.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"accountId": {
					"format": "int32",
					"description": "The unique ID number of the account this company belongs to.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"parentCompanyId": {
					"format": "int32",
					"description": "If this company is fully owned by another company, this is the unique identity of the parent company.",
					"type": "integer"
				},
				"sstPid": {
					"description": "If this company files Streamlined Sales Tax, this is the PID of this company as defined by the Streamlined Sales Tax governing board.",
					"maxLength": 9,
					"minLength": 0,
					"type": "string"
				},
				"companyCode": {
					"description": "A unique code that references this company within your account.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": "DEFAULT"
				},
				"name": {
					"description": "The name of this company, as shown to customers.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Default Company"
				},
				"isDefault": {
					"description": "This flag is true if this company is the default company for this account.  Only one company may be set as the default.",
					"type": "boolean",
					"example": false
				},
				"defaultLocationId": {
					"format": "int32",
					"description": "If set, this is the unique ID number of the default location for this company.",
					"type": "integer"
				},
				"isActive": {
					"description": "This flag indicates whether tax activity can occur for this company.  Set this flag to true to permit the company to process transactions.",
					"type": "boolean",
					"example": true
				},
				"taxpayerIdNumber": {
					"description": "For United States companies, this field contains your Taxpayer Identification Number.  \r\n            This is a nine digit number that is usually called an EIN for an Employer Identification Number if this company is a corporation, \r\n            or SSN for a Social Security Number if this company is a person.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string"
				},
				"hasProfile": {
					"description": "Set this flag to true to give this company its own unique tax profile.\r\n            If this flag is true, this company will have its own Nexus, TaxRule, TaxCode, and Item definitions.\r\n            If this flag is false, this company will inherit all profile values from its parent.",
					"type": "boolean",
					"example": true
				},
				"isReportingEntity": {
					"description": "Set this flag to true if this company must file its own tax returns.\r\n            For users who have Returns enabled, this flag turns on monthly Worksheet generation for the company.",
					"type": "boolean",
					"example": false
				},
				"sstEffectiveDate": {
					"format": "date-time",
					"description": "If this company participates in Streamlined Sales Tax, this is the date when the company joined the SST program.",
					"type": "string"
				},
				"defaultCountry": {
					"description": "The two character ISO-3166 country code of the default country for this company.",
					"maxLength": 2,
					"minLength": 2,
					"type": "string"
				},
				"baseCurrencyCode": {
					"description": "This is the three character ISO-4217 currency code of the default currency used by this company.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "USD"
				},
				"roundingLevelId": {
					"description": "Indicates whether this company prefers to round amounts at the document level or line level.",
					"enum": ["Line",
					"Document"],
					"type": "string",
					"example": 0
				},
				"warningsEnabled": {
					"description": "Set this value to true to receive warnings in API calls via SOAP.",
					"type": "boolean"
				},
				"isTest": {
					"description": "Set this flag to true to indicate that this company is a test company.\r\n            If you have Returns enabled, Test companies will not file tax returns and can be used for validation purposes.",
					"type": "boolean",
					"example": true
				},
				"taxDependencyLevelId": {
					"description": "Used to apply tax detail dependency at a jurisdiction level.",
					"enum": ["Document",
					"State",
					"TaxRegion",
					"Address"],
					"type": "string",
					"example": 0
				},
				"inProgress": {
					"description": "Set this value to true to indicate that you are still working to finish configuring this company.\r\n            While this value is true, no tax reporting will occur and the company will not be usable for transactions.",
					"type": "boolean",
					"example": false
				},
				"businessIdentificationNo": {
					"description": "Business Identification No",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"contacts": {
					"description": "Optional: A list of contacts defined for this company.  To fetch this list, add the query string \"?$include=Contacts\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ContactModel"
					}
				},
				"items": {
					"description": "Optional: A list of items defined for this company.  To fetch this list, add the query string \"?$include=Items\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ItemModel"
					}
				},
				"locations": {
					"description": "Optional: A list of locations defined for this company.  To fetch this list, add the query string \"?$include=Locations\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationModel"
					}
				},
				"nexus": {
					"description": "Optional: A list of nexus defined for this company.  To fetch this list, add the query string \"?$include=Nexus\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/NexusModel"
					}
				},
				"settings": {
					"description": "Optional: A list of settings defined for this company.  To fetch this list, add the query string \"?$include=Settings\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/SettingModel"
					}
				},
				"taxCodes": {
					"description": "Optional: A list of tax codes defined for this company.  To fetch this list, add the query string \"?$include=TaxCodes\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxCodeModel"
					}
				},
				"taxRules": {
					"description": "Optional: A list of tax rules defined for this company.  To fetch this list, add the query string \"?$include=TaxRules\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxRuleModel"
					}
				},
				"upcs": {
					"description": "Optional: A list of UPCs defined for this company.  To fetch this list, add the query string \"?$include=UPCs\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/UPCModel"
					}
				}
			},
			"example": {
				"id": 12345,
				"accountId": 123456789,
				"companyCode": "DEFAULT",
				"name": "Default Company",
				"isDefault": false,
				"isActive": true,
				"hasProfile": true,
				"isReportingEntity": false,
				"baseCurrencyCode": "USD",
				"roundingLevelId": "Line",
				"isTest": true,
				"taxDependencyLevelId": 0,
				"inProgress": false
			}
		},
		"ContactModel": {
			"description": "A contact person for a company.",
			"required": ["id",
			"companyId",
			"contactCode"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this contact.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company to which this contact belongs.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"contactCode": {
					"description": "A unique code for this contact.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "DEFAULT"
				},
				"firstName": {
					"description": "The first or given name of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Bob"
				},
				"middleName": {
					"description": "The middle name of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "The last or family name of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "McExample"
				},
				"title": {
					"description": "Professional title of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Owner"
				},
				"line1": {
					"description": "The first line of the postal mailing address of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "123 Main Street"
				},
				"line2": {
					"description": "The second line of the postal mailing address of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "The third line of the postal mailing address of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "The city of the postal mailing address of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "The state, region, or province of the postal mailing address of this contact.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "CA"
				},
				"postalCode": {
					"description": "The postal code or zip code of the postal mailing address of this contact.",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": "92615"
				},
				"country": {
					"description": "The ISO 3166 two-character country code of the postal mailing address of this contact.",
					"maxLength": 2,
					"minLength": 2,
					"type": "string",
					"example": "US"
				},
				"email": {
					"description": "The email address of this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "bob@example.org"
				},
				"phone": {
					"description": "The main phone number for this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "714 555-1212"
				},
				"mobile": {
					"description": "The mobile phone number for this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"fax": {
					"description": "The facsimile phone number for this contact.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"contactCode": "DEFAULT",
				"firstName": "Bob",
				"lastName": "McExample",
				"title": "Owner",
				"line1": "123 Main Street",
				"city": "Irvine",
				"region": "CA",
				"postalCode": "92615",
				"country": "US",
				"email": "bob@example.org",
				"phone": "714 555-1212"
			}
		},
		"ItemModel": {
			"description": "Represents an item in your company's product catalog.",
			"required": ["id",
			"companyId",
			"itemCode",
			"description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this item.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that owns this item.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"itemCode": {
					"description": "A unique code representing this item.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "CERMUG"
				},
				"taxCodeId": {
					"format": "int32",
					"description": "The unique ID number of the tax code that is applied when selling this item.\r\n            When creating or updating an item, you can either specify the Tax Code ID number or the Tax Code string; you do not need to specify both values.",
					"type": "integer"
				},
				"taxCode": {
					"description": "The unique code string of the Tax Code that is applied when selling this item.\r\n            When creating or updating an item, you can either specify the Tax Code ID number or the Tax Code string; you do not need to specify both values.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "P0000000"
				},
				"description": {
					"description": "A friendly description of this item in your product catalog.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "Ceramic Mug"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"itemCode": "CERMUG",
				"taxCode": "P0000000",
				"description": "Ceramic Mug"
			}
		},
		"LocationModel": {
			"description": "A location where this company does business.\r\n            Some jurisdictions may require you to list all locations where your company does business.",
			"required": ["id",
			"companyId",
			"locationCode",
			"addressTypeId",
			"addressCategoryId",
			"line1",
			"postalCode"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this location.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that operates at this location.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"locationCode": {
					"description": "A code that identifies this location.  Must be unique within your company.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "DEFAULT"
				},
				"description": {
					"description": "A friendly name for this location.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "Bob's Artisan Pottery"
				},
				"addressTypeId": {
					"description": "Indicates whether this location is a physical place of business or a temporary salesperson location.",
					"enum": ["Location",
					"Salesperson"],
					"type": "string",
					"example": 1
				},
				"addressCategoryId": {
					"description": "Indicates the type of place of business represented by this location.",
					"enum": ["Storefront",
					"MainOffice",
					"Warehouse",
					"Salesperson",
					"Other"],
					"type": "string",
					"example": 2
				},
				"line1": {
					"description": "The first line of the physical address of this location.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "123 Main Street"
				},
				"line2": {
					"description": "The second line of the physical address of this location.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "The third line of the physical address of this location.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "The city of the physical address of this location.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"county": {
					"description": "The county name of the physical address of this location.  Not required.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Orange"
				},
				"region": {
					"description": "The state, region, or province of the physical address of this location.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "CA"
				},
				"postalCode": {
					"description": "The postal code or zip code of the physical address of this location.",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": "92615"
				},
				"country": {
					"description": "The two character ISO-3166 country code of the physical address of this location.",
					"maxLength": 2,
					"minLength": 2,
					"type": "string",
					"example": "US"
				},
				"isDefault": {
					"description": "Set this flag to true to indicate that this is the default location for this company.",
					"type": "boolean",
					"example": true
				},
				"isRegistered": {
					"description": "Set this flag to true to indicate that this location has been registered with a tax authority.",
					"type": "boolean",
					"example": true
				},
				"dbaName": {
					"description": "If this location has a different business name from its legal entity name, specify the \"Doing Business As\" name for this location.",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "Bob's Artisan Pottery"
				},
				"outletName": {
					"description": "A friendly name for this location.",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": "Main Office"
				},
				"effectiveDate": {
					"format": "date-time",
					"description": "The date when this location was opened for business, or null if not known.",
					"type": "string"
				},
				"endDate": {
					"format": "date-time",
					"description": "If this place of business has closed, the date when this location closed business.",
					"type": "string"
				},
				"lastTransactionDate": {
					"format": "date-time",
					"description": "The most recent date when a transaction was processed for this location.  Set by AvaTax.",
					"type": "string",
					"readOnly": true
				},
				"registeredDate": {
					"format": "date-time",
					"description": "The date when this location was registered with a tax authority.  Not required.",
					"type": "string",
					"example": "2015-01-01T00:00:00"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"settings": {
					"description": "Extra information required by certain jurisdictions for filing.\r\n            For a list of settings recognized by Avalara, query the endpoint \"/api/v2/definitions/locationquestions\". \r\n            To determine the list of settings required for this location, query the endpoint \"/api/v2/companies/(id)/locations/(id)/validate\".",
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationSettingModel"
					}
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"locationCode": "DEFAULT",
				"description": "Bob's Artisan Pottery",
				"addressTypeId": "Location",
				"addressCategoryId": "MainOffice",
				"line1": "123 Main Street",
				"city": "Irvine",
				"county": "Orange",
				"region": "CA",
				"postalCode": "92615",
				"country": "US",
				"isDefault": true,
				"isRegistered": true,
				"dbaName": "Bob's Artisan Pottery",
				"outletName": "Main Office",
				"registeredDate": "2015-01-01T00:00:00"
			}
		},
		"NexusModel": {
			"description": "Represents a declaration of nexus within a particular taxing jurisdiction.",
			"required": ["id",
			"companyId",
			"region",
			"jurisCode",
			"jurisName"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this declaration of nexus.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that declared nexus.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"country": {
					"description": "The two character ISO-3166 country code of the country in which this company declared nexus.",
					"maxLength": 2,
					"minLength": 2,
					"type": "string",
					"readOnly": true,
					"example": "US"
				},
				"region": {
					"description": "The two or three character ISO region code of the region, state, or province in which this company declared nexus.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": "CA"
				},
				"jurisTypeId": {
					"description": "The jurisdiction type of the jurisdiction in which this company declared nexus.",
					"enum": ["STA",
					"CTY",
					"CIT",
					"STJ",
					"CNT"],
					"type": "string",
					"example": 1
				},
				"jurisCode": {
					"description": "The code identifying the jurisdiction in which this company declared nexus.",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": "06"
				},
				"jurisName": {
					"description": "The common name of the jurisdiction in which this company declared nexus.",
					"maxLength": 200,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": "CALIFORNIA"
				},
				"effectiveDate": {
					"format": "date-time",
					"description": "The date when this nexus began.  If not known, set to null.",
					"type": "string",
					"example": "2015-01-01T00:00:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "If this nexus will end or has ended on a specific date, set this to the date when this nexus ends.",
					"type": "string"
				},
				"shortName": {
					"description": "The short name of the jurisdiction.",
					"maxLength": 15,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": "CA"
				},
				"signatureCode": {
					"description": "The signature code of the boundary region as defined by Avalara.",
					"maxLength": 4,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"stateAssignedNo": {
					"description": "The state assigned number of this jurisdiction.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"nexusTypeId": {
					"description": "The type of nexus that this company is declaring.",
					"enum": ["None",
					"SalesOrSellersUseTax",
					"SalesTax",
					"SSTVolunteer",
					"SSTNonVolunteer"],
					"type": "string",
					"example": 1
				},
				"sourcing": {
					"description": "Indicates whether this nexus is defined as origin or destination nexus.",
					"enum": ["Destination",
					"Origin"],
					"type": "string"
				},
				"hasLocalNexus": {
					"description": "True if you are also declaring local nexus within this jurisdiction.\r\n            Many U.S. states have options for declaring nexus in local jurisdictions as well as within the state.",
					"type": "boolean",
					"example": true
				},
				"localNexusTypeId": {
					"description": "If you are declaring local nexus within this jurisdiction, this indicates whether you are declaring only \r\n            a specified list of local jurisdictions, all state-administered local jurisdictions, or all local jurisdictions.",
					"enum": ["Selected",
					"StateAdministered",
					"All"],
					"type": "string",
					"example": 2
				},
				"hasPermanentEstablishment": {
					"description": "Set this value to true if your company has a permanent establishment within this jurisdiction.",
					"type": "boolean",
					"example": true
				},
				"taxId": {
					"description": "Optional - the tax identification number under which you declared nexus.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 0,
				"companyId": 12345,
				"country": "US",
				"region": "CA",
				"jurisTypeId": "STA",
				"jurisCode": "06",
				"jurisName": "CALIFORNIA",
				"effectiveDate": "2015-01-01T00:00:00",
				"shortName": "CA",
				"nexusTypeId": "SalesOrSellersUseTax",
				"hasLocalNexus": true,
				"localNexusTypeId": "All",
				"hasPermanentEstablishment": true
			}
		},
		"SettingModel": {
			"description": "This object is used to keep track of custom information about a company.\r\n            A setting can refer to any type of data you need to remember about this company object.\r\n            When creating this object, you may define your own \"set\", \"name\", and \"value\" parameters.\r\n            To define your own values, please choose a \"set\" name that begins with \"X-\" to indicate an extension.",
			"required": ["id",
			"companyId",
			"set",
			"name"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this setting.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company this setting refers to.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"set": {
					"description": "A user-defined \"set\" containing this name-value pair.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "ItemsToRemember"
				},
				"name": {
					"description": "A user-defined \"name\" for this name-value pair.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Texas"
				},
				"value": {
					"description": "The value of this name-value pair.",
					"maxLength": 200,
					"minLength": 0,
					"type": "string",
					"example": "Alamo"
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"set": "ItemsToRemember",
				"name": "Texas",
				"value": "Alamo"
			}
		},
		"TaxCodeModel": {
			"description": "Represents a tax code that can be applied to items on a transaction.\r\n            A tax code can have specific rules for specific jurisdictions that change the tax calculation behavior.",
			"required": ["id",
			"companyId",
			"taxCode",
			"taxCodeTypeId"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax code.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that owns this tax code.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"taxCode": {
					"description": "A code string that identifies this tax code.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "PS081282"
				},
				"taxCodeTypeId": {
					"description": "The type of this tax code.",
					"maxLength": 2,
					"minLength": 0,
					"type": "string",
					"example": "P"
				},
				"description": {
					"description": "A friendly description of this tax code.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "Yarn"
				},
				"parentTaxCode": {
					"description": "If this tax code is a subset of a different tax code, this identifies the parent code.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "PS080100"
				},
				"isPhysical": {
					"description": "True if this tax code refers to a physical object.",
					"type": "boolean",
					"example": true
				},
				"goodsServiceCode": {
					"format": "int64",
					"description": "The Avalara Goods and Service Code represented by this tax code.",
					"type": "integer",
					"example": 0
				},
				"entityUseCode": {
					"description": "The Avalara Entity Use Code represented by this tax code.",
					"maxLength": 40,
					"minLength": 0,
					"type": "string",
					"example": ""
				},
				"isActive": {
					"description": "True if this tax code is active and can be used in transactions.",
					"type": "boolean",
					"example": true
				},
				"isSSTCertified": {
					"description": "True if this tax code has been certified by the Streamlined Sales Tax governing board.\r\n            By default, you should leave this value empty.",
					"type": "boolean",
					"example": false
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"taxCode": "PS081282",
				"taxCodeTypeId": "P",
				"description": "Yarn",
				"parentTaxCode": "PS080100",
				"isPhysical": true,
				"goodsServiceCode": 0,
				"entityUseCode": "",
				"isActive": true,
				"isSSTCertified": false
			}
		},
		"TaxRuleModel": {
			"description": "Represents a tax rule that changes the behavior of Avalara's tax engine for certain products in certain jurisdictions.",
			"required": ["id",
			"companyId",
			"jurisCode",
			"country",
			"region"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax rule.",
					"type": "integer",
					"readOnly": true,
					"example": 56789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that owns this tax rule.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"taxCodeId": {
					"format": "int32",
					"description": "The unique ID number of the tax code for this rule.\r\n            When creating or updating a tax rule, you may specify either the taxCodeId value or the taxCode value.",
					"type": "integer"
				},
				"taxCode": {
					"description": "The code string of the tax code for this rule.\r\n            When creating or updating a tax rule, you may specify either the taxCodeId value or the taxCode value.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "FR020800"
				},
				"stateFIPS": {
					"description": "For U.S. tax rules, this is the state's Federal Information Processing Standard (FIPS) code.",
					"maxLength": 2,
					"minLength": 0,
					"type": "string",
					"example": "04"
				},
				"jurisName": {
					"description": "The name of the jurisdiction to which this tax rule applies.",
					"maxLength": 200,
					"minLength": 0,
					"type": "string",
					"example": "MARICOPA"
				},
				"jurisCode": {
					"description": "The code of the jurisdiction to which this tax rule applies.",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": "013"
				},
				"jurisTypeId": {
					"description": "The type of the jurisdiction to which this tax rule applies.",
					"enum": ["STA",
					"CTY",
					"CIT",
					"STJ",
					"CNT"],
					"type": "string",
					"example": 2
				},
				"customerUsageType": {
					"description": "The type of customer usage to which this rule applies.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": ""
				},
				"taxTypeId": {
					"description": "Indicates which tax types to which this rule applies.",
					"enum": ["All",
					"BothSalesAndUseTax",
					"ConsumerUseTax",
					"MedicalExcise",
					"Fee",
					"VATInputTax",
					"VATNonrecoverableInputTax",
					"VATOutputTax",
					"Rental",
					"SalesTax",
					"UseTax"],
					"type": "string",
					"example": 66
				},
				"rateTypeId": {
					"description": "Indicates the rate type to which this rule applies.",
					"enum": ["ReducedA",
					"ReducedB",
					"Food",
					"General",
					"IncreasedStandard",
					"LinenRental",
					"Medical",
					"Parking",
					"SuperReduced",
					"ReducedR",
					"Standard",
					"Zero"],
					"type": "string"
				},
				"taxRuleTypeId": {
					"description": "This type value determines the behavior of the tax rule.\r\n            You can specify that this rule controls the product's taxability or exempt / nontaxable status, the product's rate \r\n            (for example, if you have been granted an official ruling for your product's rate that differs from the official rate), \r\n            or other types of behavior.",
					"enum": ["RateRule",
					"RateOverrideRule",
					"BaseRule",
					"ExemptEntityRule",
					"ProductTaxabilityRule",
					"NexusRule"],
					"type": "string",
					"example": 4
				},
				"isAllJuris": {
					"description": "Set this value to true if this tax rule applies in all jurisdictions.",
					"type": "boolean",
					"example": true
				},
				"value": {
					"format": "double",
					"description": "The corrected rate for this tax rule.",
					"type": "number",
					"example": 0.0
				},
				"cap": {
					"format": "double",
					"description": "The maximum cap for the price of this item according to this rule.",
					"type": "number",
					"example": 0.0
				},
				"threshold": {
					"format": "double",
					"description": "The per-unit threshold that must be met before this rule applies.",
					"type": "number",
					"example": 0.0
				},
				"options": {
					"description": "Custom option flags for this rule.",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"example": ""
				},
				"effectiveDate": {
					"format": "date-time",
					"description": "The first date at which this rule applies.  If null, this rule will apply to all dates prior to the end date.",
					"type": "string",
					"example": "2016-10-29T00:00:00-07:00"
				},
				"endDate": {
					"format": "date-time",
					"description": "The last date for which this rule applies.  If null, this rule will apply to all dates after the effective date.",
					"type": "string"
				},
				"description": {
					"description": "A friendly name for this tax rule.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "Freight"
				},
				"countyFIPS": {
					"description": "For U.S. tax rules, this is the county's Federal Information Processing Standard (FIPS) code.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "013"
				},
				"isSTPro": {
					"description": "If true, indicates this rule is for Sales Tax Pro.",
					"type": "boolean",
					"example": false
				},
				"country": {
					"description": "The two character ISO 3166 country code for the locations where this rule applies.",
					"maxLength": 2,
					"minLength": 2,
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "The state, region, or province name for the locations where this rule applies.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "AZ"
				},
				"sourcing": {
					"description": "The sourcing types to which this rule applies.",
					"enum": ["Destination",
					"Origin"],
					"type": "string"
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 56789,
				"companyId": 12345,
				"taxCode": "FR020800",
				"stateFIPS": "04",
				"jurisName": "MARICOPA",
				"jurisCode": "013",
				"jurisTypeId": "CTY",
				"customerUsageType": "",
				"taxTypeId": "BothSalesAndUseTax",
				"taxRuleTypeId": "ProductTaxabilityRule",
				"isAllJuris": true,
				"value": 0.0,
				"cap": 0.0,
				"threshold": 0.0,
				"options": "",
				"effectiveDate": "2016-10-29T00:00:00-07:00",
				"description": "Freight",
				"countyFIPS": "013",
				"isSTPro": false,
				"country": "US",
				"region": "AZ"
			}
		},
		"UPCModel": {
			"description": "One Universal Product Code object as defined for your company.",
			"required": ["id",
			"companyId",
			"upc",
			"description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number for this UPC.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company to which this UPC belongs.",
					"type": "integer",
					"readOnly": true,
					"example": 1234567
				},
				"upc": {
					"description": "The 12-14 character Universal Product Code, European Article Number, or Global Trade Identification Number.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "023032550992"
				},
				"legacyTaxCode": {
					"description": "Legacy Tax Code applied to any product sold with this UPC.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "PS081282"
				},
				"description": {
					"description": "Description of the product to which this UPC applies.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"example": "Yarn"
				},
				"effectiveDate": {
					"format": "date-time",
					"description": "If this UPC became effective on a certain date, this contains the first date on which the UPC was effective.",
					"type": "string"
				},
				"endDate": {
					"format": "date-time",
					"description": "If this UPC expired or will expire on a certain date, this contains the last date on which the UPC was effective.",
					"type": "string"
				},
				"usage": {
					"format": "int32",
					"description": "A usage identifier for this UPC code.",
					"type": "integer",
					"example": 0
				},
				"isSystem": {
					"format": "int32",
					"description": "A flag indicating whether this UPC code is attached to the AvaTax system or to a company.",
					"type": "integer",
					"example": 0
				},
				"createdDate": {
					"format": "date-time",
					"description": "The date when this record was created.",
					"type": "string",
					"readOnly": true
				},
				"createdUserId": {
					"format": "int32",
					"description": "The User ID of the user who created this record.",
					"type": "integer",
					"readOnly": true
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				}
			},
			"example": {
				"id": 123456789,
				"companyId": 1234567,
				"upc": "023032550992",
				"legacyTaxCode": "PS081282",
				"description": "Yarn",
				"usage": 0,
				"isSystem": 0
			}
		},
		"LocationSettingModel": {
			"description": "Represents the answer to one local jurisdiction question for a location.",
			"type": "object",
			"properties": {
				"questionId": {
					"format": "int32",
					"description": "The unique ID number of the location question answered.",
					"type": "integer"
				},
				"value": {
					"description": "The answer the user provided.",
					"type": "string"
				}
			},
			"example": {
				
			}
		},
		"FetchResult[CompanyModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"CompanyInitializationModel": {
			"description": "Company Initialization Model",
			"required": ["name",
			"companyCode",
			"line1",
			"city",
			"region",
			"postalCode",
			"country",
			"firstName",
			"lastName",
			"email",
			"phoneNumber"],
			"type": "object",
			"properties": {
				"name": {
					"description": "Company Name",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Bob's Artisan Pottery"
				},
				"companyCode": {
					"description": "Company Code - used to distinguish between companies within your accounting system",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "DEFAULT"
				},
				"vatRegistrationId": {
					"description": "Vat Registration Id - leave blank if not known.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"taxpayerIdNumber": {
					"description": "United States Taxpayer ID number, usually your Employer Identification Number if you are a business or your Social Security Number if you are an individual.",
					"maxLength": 11,
					"minLength": 0,
					"type": "string",
					"example": "12-3456789"
				},
				"line1": {
					"description": "Address Line1",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "123 Main Street"
				},
				"line2": {
					"description": "Line2",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"line3": {
					"description": "Line3",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "City",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Irvine"
				},
				"region": {
					"description": "Two character ISO 3166 Region code for this company's primary business location.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "CA"
				},
				"postalCode": {
					"description": "Postal Code",
					"maxLength": 10,
					"minLength": 0,
					"type": "string",
					"example": "92615"
				},
				"country": {
					"description": "Two character ISO 3166 Country code for this company's primary business location.",
					"maxLength": 2,
					"minLength": 2,
					"type": "string",
					"example": "US"
				},
				"firstName": {
					"description": "First Name",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Bob"
				},
				"lastName": {
					"description": "Last Name",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Example"
				},
				"title": {
					"description": "Title",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Owner"
				},
				"email": {
					"description": "Email",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "bob@example.org"
				},
				"phoneNumber": {
					"description": "Phone Number",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "714 555-2121"
				},
				"mobileNumber": {
					"description": "Mobile Number",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "714 555-1212"
				},
				"faxNumber": {
					"description": "Fax Number",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				}
			},
			"example": {
				"name": "Bob's Artisan Pottery",
				"companyCode": "DEFAULT",
				"taxpayerIdNumber": "12-3456789",
				"line1": "123 Main Street",
				"city": "Irvine",
				"region": "CA",
				"postalCode": "92615",
				"country": "US",
				"firstName": "Bob",
				"lastName": "Example",
				"title": "Owner",
				"email": "bob@example.org",
				"phoneNumber": "714 555-2121",
				"mobileNumber": "714 555-1212"
			}
		},
		"FetchResult[ContactModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ContactModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"FetchResult[NexusModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/NexusModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"FetchResult[TaxCodeModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxCodeModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"TaxCodeTypesModel": {
			"description": "Information about Avalara-defined tax code types.\r\n            This list is used when creating tax codes and tax rules.",
			"type": "object",
			"properties": {
				"types": {
					"description": "The list of Avalara-defined tax code types.",
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"example": {
						"D": "Digital",
						"F": "Freight",
						"O": "Other",
						"P": "Product",
						"S": "Service",
						"U": "Unknown"
					}
				}
			},
			"example": {
				"types": {
					"D": "Digital",
					"F": "Freight",
					"O": "Other",
					"P": "Product",
					"S": "Service",
					"U": "Unknown"
				}
			}
		},
		"FetchResult[SubscriptionTypeModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/SubscriptionTypeModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"SubscriptionTypeModel": {
			"description": "Represents a service or a subscription type.",
			"required": ["description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this subscription type.",
					"type": "integer",
					"readOnly": true,
					"example": 2
				},
				"description": {
					"description": "The friendly name of the service this subscription type represents.",
					"maxLength": 255,
					"minLength": 0,
					"type": "string",
					"readOnly": true,
					"example": "AvaTaxPro"
				}
			},
			"example": {
				"id": 2,
				"description": "AvaTaxPro"
			}
		},
		"FetchResult[String]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"FetchResult[SecurityRoleModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/SecurityRoleModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"SecurityRoleModel": {
			"description": "Represents a single security role.",
			"type": "object",
			"properties": {
				"id": {
					"format": "byte",
					"description": "The unique ID number of this security role.",
					"type": "string",
					"readOnly": true,
					"example": 3
				},
				"description": {
					"description": "A description of this security role",
					"type": "string",
					"readOnly": true,
					"example": "AccountAdmin"
				}
			},
			"example": {
				"id": 3,
				"description": "AccountAdmin"
			}
		},
		"FetchResult[TaxAuthorityModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxAuthorityModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"TaxAuthorityModel": {
			"description": "Tax Authority Model",
			"required": ["id",
			"name"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this tax authority.",
					"type": "integer",
					"readOnly": true,
					"example": 12345
				},
				"name": {
					"description": "The friendly name of this tax authority.",
					"maxLength": 128,
					"minLength": 0,
					"type": "string",
					"example": "COLORADO"
				},
				"taxAuthorityTypeId": {
					"format": "int32",
					"description": "The type of this tax authority.",
					"type": "integer",
					"example": 45
				},
				"jurisdictionId": {
					"format": "int32",
					"description": "The unique ID number of the jurisdiction for this tax authority.",
					"type": "integer",
					"example": 12345
				}
			},
			"example": {
				"id": 12345,
				"name": "COLORADO",
				"taxAuthorityTypeId": 45,
				"jurisdictionId": 12345
			}
		},
		"FetchResult[TaxAuthorityFormModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxAuthorityFormModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"TaxAuthorityFormModel": {
			"description": "Represents a form that can be filed with a tax authority.",
			"required": ["taxAuthorityId",
			"formName"],
			"type": "object",
			"properties": {
				"taxAuthorityId": {
					"format": "int32",
					"description": "The unique ID number of the tax authority.",
					"type": "integer",
					"example": 69
				},
				"formName": {
					"description": "The form name of the form for this tax authority.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "CABOE401A2"
				}
			},
			"example": {
				"taxAuthorityId": 69,
				"formName": "CABOE401A2"
			}
		},
		"FetchResult[ParameterModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ParameterModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"ParameterModel": {
			"description": "An extra property that can change the behavior of tax transactions.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this property.",
					"type": "integer",
					"example": 12345
				},
				"category": {
					"description": "The service category of this property.  Some properties may require that you subscribe to certain features of avatax before they can be used.",
					"type": "string",
					"example": "Lodging"
				},
				"name": {
					"description": "The name of the property.  To use this property, add a field on the \"properties\" object of a /api/v2/companies/(code)/transactions/create call.",
					"type": "string",
					"example": "AvaTax.Lodging.NumberOfNights"
				},
				"dataType": {
					"description": "The data type of the property.",
					"enum": ["String",
					"Boolean",
					"Numeric"],
					"type": "string",
					"example": 2
				},
				"description": {
					"description": "A full description of this property.",
					"type": "string",
					"example": "Lodging Number of Nights"
				}
			},
			"example": {
				"id": 12345,
				"category": "Lodging",
				"name": "AvaTax.Lodging.NumberOfNights",
				"dataType": 2,
				"description": "Lodging Number of Nights"
			}
		},
		"FetchResult[LocationQuestionModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationQuestionModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"LocationQuestionModel": {
			"description": "Information about questions that the local jurisdictions require for each location",
			"required": ["id",
			"question",
			"description"],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"description": "The unique ID number of this location setting type",
					"type": "integer",
					"example": 1
				},
				"question": {
					"description": "This is the prompt for this question",
					"type": "string",
					"example": "State Assigned Code"
				},
				"description": {
					"description": "If additional information is available about the location setting, this contains descriptive text to help\r\n            you identify the correct value to provide in this setting.",
					"type": "string",
					"example": ""
				},
				"regularExpression": {
					"description": "If available, this regular expression will verify that the input from the user is in the expected format.",
					"type": "string"
				},
				"exampleValue": {
					"description": "If available, this is an example value that you can demonstrate to the user to show what is expected.",
					"type": "string"
				},
				"jurisdictionName": {
					"description": "Indicates which jurisdiction requires this question",
					"type": "string"
				},
				"jurisdictionType": {
					"description": "Indicates which type of jurisdiction requires this question",
					"enum": ["Country",
					"Composite",
					"State",
					"County",
					"City",
					"Special"],
					"type": "string",
					"example": 0
				},
				"jurisdictionCountry": {
					"description": "Indicates the country that this jurisdiction belongs to",
					"type": "string"
				},
				"jurisdictionRegion": {
					"description": "Indicates the state, region, or province that this jurisdiction belongs to",
					"type": "string"
				}
			},
			"example": {
				"id": 1,
				"question": "State Assigned Code",
				"description": "",
				"jurisdictionType": 0
			}
		},
		"FetchResult[ItemModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ItemModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"FetchResult[LocationModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"LocationValidationModel": {
			"description": "Tells you whether this location object has been correctly set up to the local jurisdiction's standards",
			"type": "object",
			"properties": {
				"settingsValidated": {
					"description": "True if the location has a value for each jurisdiction-required setting.\r\n            The user is required to ensure that the values are correct according to the jurisdiction; this flag\r\n            does not indicate whether the taxing jurisdiction has accepted the data you have provided.",
					"type": "boolean"
				},
				"requiredSettings": {
					"description": "A list of settings that must be defined for this location",
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocationQuestionModel"
					}
				}
			},
			"example": {
				
			}
		},
		"PasswordChangeModel": {
			"description": "Password Change Model",
			"required": ["oldPassword",
			"newPassword"],
			"type": "object",
			"properties": {
				"oldPassword": {
					"description": "Old Password",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "MyOldPassword123!"
				},
				"newPassword": {
					"description": "New Password",
					"maxLength": 50,
					"minLength": 8,
					"type": "string",
					"example": "ANewPassword567:)"
				}
			},
			"example": {
				"oldPassword": "MyOldPassword123!",
				"newPassword": "ANewPassword567:)"
			}
		},
		"SetPasswordModel": {
			"description": "Set Password Model",
			"required": ["newPassword"],
			"type": "object",
			"properties": {
				"newPassword": {
					"description": "New Password",
					"maxLength": 50,
					"minLength": 8,
					"type": "string",
					"example": "NewPassword789~~!"
				}
			},
			"example": {
				"newPassword": "NewPassword789~~!"
			}
		},
		"FetchResult[SettingModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/SettingModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"FetchResult[SubscriptionModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/SubscriptionModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"TaxRateModel": {
			"description": "Tax Rate Model",
			"type": "object",
			"properties": {
				"totalRate": {
					"format": "double",
					"description": "Total Rate",
					"type": "number",
					"example": 0.0625
				},
				"rates": {
					"description": "Rates",
					"type": "array",
					"items": {
						"$ref": "#/definitions/RateModel"
					},
					"example": [{
						"rate": 0.0625,
						"name": "CALIFORNIA",
						"type": "State"
					}]
				}
			},
			"example": {
				"totalRate": 0.0625,
				"rates": [{
					"rate": 0.0625,
					"name": "CALIFORNIA",
					"type": "State"
				}]
			}
		},
		"RateModel": {
			"description": "Rate Model",
			"type": "object",
			"properties": {
				"rate": {
					"format": "double",
					"description": "Rate",
					"type": "number",
					"example": 0.0625
				},
				"name": {
					"description": "Name",
					"type": "string",
					"example": "CALIFORNIA"
				},
				"type": {
					"description": "Type",
					"enum": ["Country",
					"Composite",
					"State",
					"County",
					"City",
					"Special"],
					"type": "string",
					"example": 1
				}
			},
			"example": {
				"rate": 0.0625,
				"name": "CALIFORNIA",
				"type": "State"
			}
		},
		"FetchResult[TaxRuleModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxRuleModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"TransactionModel": {
			"description": "A single transaction - for example, a sales invoice or purchase order.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this transaction.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"code": {
					"description": "A unique customer-provided code identifying this transaction.",
					"type": "string",
					"readOnly": true,
					"example": "a26c19c4-d793-405a-98ed-d7fa305ca288"
				},
				"companyId": {
					"format": "int32",
					"description": "The unique ID number of the company that recorded this transaction.",
					"type": "integer",
					"example": 12345
				},
				"date": {
					"format": "date-time",
					"description": "The date on which this transaction occurred.",
					"type": "string",
					"example": "2016-10-29T00:00:00-07:00"
				},
				"taxDate": {
					"format": "date-time",
					"description": "The date that was used when calculating tax for this transaction.\r\n            By default, this should be the same as the transaction date; however, when a consumer returns a product purchased in a previous month,\r\n            it may be necessary to specify the date of the original transaction in order to correctly return the exact amount of sales tax that was\r\n            charged of the consumer on the original date they purchased the product.",
					"type": "string",
					"example": "2016-10-29T00:00:00-07:00"
				},
				"paymentDate": {
					"format": "date-time",
					"description": "The date when payment was made on this transaction.  By default, this should be the same as the date of the transaction.",
					"type": "string",
					"example": "2016-10-29T00:00:00-07:00"
				},
				"status": {
					"description": "The status of the transaction.",
					"enum": ["Temporary",
					"Saved",
					"Posted",
					"Committed",
					"Cancelled",
					"Adjusted",
					"Queued",
					"PendingApproval",
					"Any"],
					"type": "string",
					"example": 3
				},
				"type": {
					"description": "The type of the transaction.  For Returns customers, a transaction type of \"Invoice\" will be reported to the tax authorities.\r\n            A sales transaction represents a sale from the company to a customer.  A purchase transaction represents a purchase made by the company.\r\n            A return transaction represents a customer who decided to request a refund after purchasing a product from the company.  An inventory \r\n            transfer transaction represents goods that were moved from one location of the company to another location without changing ownership.",
					"enum": ["SalesOrder",
					"SalesInvoice",
					"PurchaseOrder",
					"PurchaseInvoice",
					"ReturnOrder",
					"ReturnInvoice",
					"InventoryTransferOrder",
					"InventoryTransferInvoice",
					"ReverseChargeOrder",
					"ReverseChargeInvoice",
					"Any"],
					"type": "string",
					"example": 1
				},
				"batchCode": {
					"description": "If this transaction was created as part of a batch, this code indicates which batch.",
					"type": "string"
				},
				"currencyCode": {
					"description": "The three-character ISO 4217 currency code that was used for payment for this transaction.",
					"type": "string",
					"example": "USD"
				},
				"customerUsageType": {
					"description": "The customer usage type for this transaction.  Customer usage types often affect exemption or taxability rules.",
					"type": "string",
					"example": ""
				},
				"customerVendorCode": {
					"description": "CustomerVendorCode",
					"type": "string",
					"example": "ABC"
				},
				"exemptNo": {
					"description": "If this transaction was exempt, this field will contain the word \"Exempt\".",
					"type": "string",
					"example": ""
				},
				"reconciled": {
					"description": "If this transaction has been reconciled against the company's ledger, this value is set to true.",
					"type": "boolean",
					"example": true
				},
				"locationCode": {
					"description": "If this transaction was made from a specific reporting location, this is the code string of the location.\r\n            For customers using Returns, this indicates how tax will be reported according to different locations on the tax forms.",
					"type": "string",
					"example": "DEFAULT"
				},
				"purchaseOrderNo": {
					"description": "The customer-supplied purchase order number of this transaction.",
					"type": "string"
				},
				"referenceCode": {
					"description": "A user-defined reference code for this transaction.",
					"type": "string"
				},
				"salespersonCode": {
					"description": "The salesperson who provided this transaction.  Not required.",
					"type": "string",
					"example": "DEF"
				},
				"taxOverrideType": {
					"description": "If a tax override was applied to this transaction, indicates what type of tax override was applied.",
					"enum": ["None",
					"TaxAmount",
					"Exemption",
					"TaxDate",
					"AccruedTaxAmount"],
					"type": "string",
					"example": 0
				},
				"taxOverrideAmount": {
					"format": "double",
					"description": "If a tax override was applied to this transaction, indicates the amount of tax that was requested by the customer.",
					"type": "number",
					"example": 0.00
				},
				"taxOverrideReason": {
					"description": "If a tax override was applied to this transaction, indicates the reason for the tax override.",
					"type": "string",
					"example": ""
				},
				"totalAmount": {
					"format": "double",
					"description": "The total amount of this transaction.",
					"type": "number",
					"example": 1000.0
				},
				"totalExempt": {
					"format": "double",
					"description": "The amount of this transaction that was exempt.",
					"type": "number",
					"example": 0.0
				},
				"totalTax": {
					"format": "double",
					"description": "The total tax calculated for all lines in this transaction.",
					"type": "number",
					"example": 62.50
				},
				"totalTaxable": {
					"format": "double",
					"description": "The portion of the total amount of this transaction that was taxable.",
					"type": "number",
					"example": 1000.0
				},
				"totalTaxCalculated": {
					"format": "double",
					"description": "If a tax override was applied to this transaction, indicates the amount of tax Avalara calculated for the transaction.",
					"type": "number",
					"example": 62.50
				},
				"adjustmentReason": {
					"description": "If this transaction was adjusted, indicates the unique ID number of the reason why the transaction was adjusted.",
					"enum": ["NotAdjusted",
					"SourcingIssue",
					"ReconciledWithGeneralLedger",
					"ExemptCertApplied",
					"PriceAdjusted",
					"ProductReturned",
					"ProductExchanged",
					"BadDebt",
					"Other",
					"Offline"],
					"type": "string",
					"example": 0
				},
				"adjustmentDescription": {
					"description": "If this transaction was adjusted, indicates a description of the reason why the transaction was adjusted.",
					"type": "string",
					"example": ""
				},
				"locked": {
					"description": "If this transaction has been reported to a tax authority, this transaction is considered locked and may not be adjusted after reporting.",
					"type": "boolean",
					"example": false
				},
				"region": {
					"description": "The two-or-three character ISO region code of the region for this transaction.",
					"type": "string",
					"example": "CA"
				},
				"country": {
					"description": "The two-character ISO 3166 code of the country for this transaction.",
					"maxLength": 2,
					"minLength": 2,
					"type": "string",
					"example": "US"
				},
				"version": {
					"format": "int32",
					"description": "If this transaction was adjusted, this indicates the version number of this transaction.  Incremented each time the transaction\r\n            is adjusted.",
					"type": "integer",
					"example": 0
				},
				"softwareVersion": {
					"description": "The software version used to calculate this transaction.",
					"type": "string"
				},
				"originAddressId": {
					"format": "int64",
					"description": "The unique ID number of the origin address for this transaction.",
					"type": "integer",
					"example": 123456789
				},
				"destinationAddressId": {
					"format": "int64",
					"description": "The unique ID number of the destination address for this transaction.",
					"type": "integer",
					"example": 123456789
				},
				"exchangeRateEffectiveDate": {
					"format": "date-time",
					"description": "If this transaction included foreign currency exchange, this is the date as of which the exchange rate was calculated.",
					"type": "string"
				},
				"exchangeRate": {
					"format": "double",
					"description": "If this transaction included foreign currency exchange, this is the exchange rate that was used.",
					"type": "number"
				},
				"isSellerImporterOfRecord": {
					"description": "If true, this seller was considered the importer of record of a product shipped internationally.",
					"type": "boolean",
					"example": false
				},
				"description": {
					"description": "Description of this transaction.",
					"type": "string",
					"example": "Yarn"
				},
				"email": {
					"description": "Email address associated with this transaction.",
					"type": "string"
				},
				"modifiedDate": {
					"format": "date-time",
					"description": "The date/time when this record was last modified.",
					"type": "string",
					"readOnly": true
				},
				"modifiedUserId": {
					"format": "int32",
					"description": "The user ID of the user who last modified this record.",
					"type": "integer",
					"readOnly": true
				},
				"lines": {
					"description": "Optional: A list of line items in this transaction.  To fetch this list, add the query string \"?$include=Lines\" or \"?$include=Details\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionLineModel"
					},
					"example": [{
						"id": 123456789,
						"transactionId": 123456789,
						"lineNumber": "1",
						"boundaryOverrideId": 0,
						"customerUsageType": "",
						"description": "Yarn",
						"destinationAddressId": 12345,
						"originAddressId": 123456789,
						"discountAmount": 100.0,
						"discountTypeId": 0,
						"exemptAmount": 0.0,
						"exemptCertId": 0,
						"exemptNo": "",
						"isItemTaxable": true,
						"isSSTP": false,
						"itemCode": "116292",
						"lineAmount": 1000.0,
						"quantity": 1.00,
						"ref1": "Note: Deliver to Bob",
						"reportingDate": "2016-10-29T00:00:00-07:00",
						"revAccount": "",
						"sourcing": "Destination",
						"tax": 62.50,
						"taxableAmount": 1000.0,
						"taxCalculated": 62.50,
						"taxCode": "PS081282",
						"taxDate": "2016-10-29T00:00:00-07:00",
						"taxEngine": "",
						"taxOverrideType": "None",
						"taxOverrideAmount": 0.00,
						"taxOverrideReason": "",
						"taxIncluded": false,
						"details": [{
							"id": 123456789,
							"transactionLineId": 123456789,
							"transactionId": 123456789,
							"addressId": 12345,
							"country": "US",
							"region": "CA",
							"stateFIPS": "06",
							"exemptAmount": 0.00,
							"exemptReasonId": 4,
							"inState": false,
							"jurisCode": "06",
							"jurisName": "CALIFORNIA",
							"jurisdictionId": 5000531,
							"signatureCode": "AGAM",
							"stateAssignedNo": "",
							"jurisType": "STA",
							"nonTaxableAmount": 0.0,
							"nonTaxableRuleId": 0,
							"nonTaxableType": "BaseRule",
							"rate": 0.0625,
							"rateRuleId": 1321915,
							"rateSourceId": 3,
							"serCode": "",
							"sourcing": "Destination",
							"tax": 62.50,
							"taxableAmount": 1000.0,
							"taxType": "Sales",
							"taxName": "CA STATE TAX",
							"taxAuthorityTypeId": 45,
							"taxRegionId": 2127184,
							"taxCalculated": 62.50,
							"taxOverride": 0.00,
							"rateType": "General"
						}]
					}]
				},
				"addresses": {
					"description": "Optional: A list of line items in this transaction.  To fetch this list, add the query string \"?$include=Addresses\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionAddressModel"
					},
					"example": [{
						"id": 0,
						"transactionId": 0,
						"boundaryLevel": "Address",
						"line1": "100 Ravine Lane Northeast #220",
						"city": "Bainbridge Island",
						"region": "WA",
						"postalCode": "98110",
						"country": "US",
						"taxRegionId": 0
					}]
				},
				"history": {
					"description": "If this transaction has been adjusted, this list contains all the previous versions of the document.",
					"type": "object",
				},
				"summary": {
					"description": "Contains a summary of tax on this transaction.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionSummary"
					}
				},
				"parameters": {
					"description": "Contains a list of extra parameters that were set when the transaction was created.",
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"messages": {
					"description": "List of informational and warning messages regarding this API call.  These messages are only relevant to the current API call.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/AvaTaxMessage"
					}
				}
			},
			"example": {
				"id": 123456789,
				"code": "a26c19c4-d793-405a-98ed-d7fa305ca288",
				"companyId": 12345,
				"date": "2016-10-29T00:00:00-07:00",
				"taxDate": "2016-10-29T00:00:00-07:00",
				"paymentDate": "2016-10-29T00:00:00-07:00",
				"status": "Committed",
				"type": "SalesInvoice",
				"currencyCode": "USD",
				"customerUsageType": "",
				"customerVendorCode": "ABC",
				"exemptNo": "",
				"reconciled": true,
				"locationCode": "DEFAULT",
				"salespersonCode": "DEF",
				"taxOverrideType": "None",
				"taxOverrideAmount": 0.00,
				"taxOverrideReason": "",
				"totalAmount": 1000.0,
				"totalExempt": 0.0,
				"totalTax": 62.50,
				"totalTaxable": 1000.0,
				"totalTaxCalculated": 62.50,
				"adjustmentReason": "NotAdjusted",
				"adjustmentDescription": "",
				"locked": false,
				"region": "CA",
				"country": "US",
				"version": 0,
				"originAddressId": 123456789,
				"destinationAddressId": 123456789,
				"isSellerImporterOfRecord": false,
				"description": "Yarn",
				"lines": [{
					"id": 123456789,
					"transactionId": 123456789,
					"lineNumber": "1",
					"boundaryOverrideId": 0,
					"customerUsageType": "",
					"description": "Yarn",
					"destinationAddressId": 12345,
					"originAddressId": 123456789,
					"discountAmount": 100.0,
					"discountTypeId": 0,
					"exemptAmount": 0.0,
					"exemptCertId": 0,
					"exemptNo": "",
					"isItemTaxable": true,
					"isSSTP": false,
					"itemCode": "116292",
					"lineAmount": 1000.0,
					"quantity": 1.00,
					"ref1": "Note: Deliver to Bob",
					"reportingDate": "2016-10-29T00:00:00-07:00",
					"revAccount": "",
					"sourcing": "Destination",
					"tax": 62.50,
					"taxableAmount": 1000.0,
					"taxCalculated": 62.50,
					"taxCode": "PS081282",
					"taxDate": "2016-10-29T00:00:00-07:00",
					"taxEngine": "",
					"taxOverrideType": "None",
					"taxOverrideAmount": 0.00,
					"taxOverrideReason": "",
					"taxIncluded": false,
					"details": [{
						"id": 123456789,
						"transactionLineId": 123456789,
						"transactionId": 123456789,
						"addressId": 12345,
						"country": "US",
						"region": "CA",
						"stateFIPS": "06",
						"exemptAmount": 0.00,
						"exemptReasonId": 4,
						"inState": false,
						"jurisCode": "06",
						"jurisName": "CALIFORNIA",
						"jurisdictionId": 5000531,
						"signatureCode": "AGAM",
						"stateAssignedNo": "",
						"jurisType": "STA",
						"nonTaxableAmount": 0.0,
						"nonTaxableRuleId": 0,
						"nonTaxableType": "BaseRule",
						"rate": 0.0625,
						"rateRuleId": 1321915,
						"rateSourceId": 3,
						"serCode": "",
						"sourcing": "Destination",
						"tax": 62.50,
						"taxableAmount": 1000.0,
						"taxType": "Sales",
						"taxName": "CA STATE TAX",
						"taxAuthorityTypeId": 45,
						"taxRegionId": 2127184,
						"taxCalculated": 62.50,
						"taxOverride": 0.00,
						"rateType": "General"
					}]
				}],
				"addresses": [{
					"id": 0,
					"transactionId": 0,
					"boundaryLevel": "Address",
					"line1": "100 Ravine Lane Northeast #220",
					"city": "Bainbridge Island",
					"region": "WA",
					"postalCode": "98110",
					"country": "US",
					"taxRegionId": 0
				}]
			}
		},
		"TransactionLineModel": {
			"description": "One line item on this transaction.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this transaction line item.",
					"type": "integer",
					"example": 123456789
				},
				"transactionId": {
					"format": "int64",
					"description": "The unique ID number of the transaction to which this line item belongs.",
					"type": "integer",
					"example": 123456789
				},
				"lineNumber": {
					"description": "The line number or code indicating the line on this invoice or receipt or document.",
					"type": "string",
					"example": "1"
				},
				"boundaryOverrideId": {
					"format": "int32",
					"description": "The unique ID number of the boundary override applied to this line item.",
					"type": "integer",
					"example": 0
				},
				"customerUsageType": {
					"description": "The customer usage type for this line item.  Usage type often affects taxability rules.",
					"type": "string",
					"example": ""
				},
				"description": {
					"description": "A description of the item or service represented by this line.",
					"type": "string",
					"example": "Yarn"
				},
				"destinationAddressId": {
					"format": "int64",
					"description": "The unique ID number of the destination address where this line was delivered or sold.\r\n            In the case of a point-of-sale transaction, the destination address and origin address will be the same.\r\n            In the case of a shipped transaction, they will be different.",
					"type": "integer",
					"example": 12345
				},
				"originAddressId": {
					"format": "int64",
					"description": "The unique ID number of the origin address where this line was delivered or sold.\r\n            In the case of a point-of-sale transaction, the origin address and destination address will be the same.\r\n            In the case of a shipped transaction, they will be different.",
					"type": "integer",
					"example": 123456789
				},
				"discountAmount": {
					"format": "double",
					"description": "The amount of discount that was applied to this line item.  This represents the difference between list price and sale price of the item.\r\n            In general, a discount represents money that did not change hands; tax is calculated on only the amount of money that changed hands.",
					"type": "number",
					"example": 100.0
				},
				"discountTypeId": {
					"format": "int32",
					"description": "The type of discount, if any, that was applied to this line item.",
					"type": "integer",
					"example": 0
				},
				"exemptAmount": {
					"format": "double",
					"description": "The amount of this line item that was exempt.",
					"type": "number",
					"example": 0.0
				},
				"exemptCertId": {
					"format": "int32",
					"description": "The unique ID number of the exemption certificate that applied to this line item.",
					"type": "integer",
					"example": 0
				},
				"exemptNo": {
					"description": "If this line item was exempt, this string contains the word 'Exempt'.",
					"type": "string",
					"example": ""
				},
				"isItemTaxable": {
					"description": "True if this item is taxable.",
					"type": "boolean",
					"example": true
				},
				"isSSTP": {
					"description": "True if this item is a Streamlined Sales Tax line item.",
					"type": "boolean",
					"example": false
				},
				"itemCode": {
					"description": "The code string of the item represented by this line item.",
					"type": "string",
					"example": "116292"
				},
				"lineAmount": {
					"format": "double",
					"description": "The total amount of the transaction, including both taxable and exempt.  This is the total price for all items.\r\n            To determine the individual item price, divide this by quantity.",
					"type": "number",
					"example": 1000.0
				},
				"quantity": {
					"format": "double",
					"description": "The quantity of products sold on this line item.",
					"type": "number",
					"example": 1.00
				},
				"ref1": {
					"description": "A user-defined reference identifier for this transaction line item.",
					"type": "string",
					"example": "Note: Deliver to Bob"
				},
				"ref2": {
					"description": "A user-defined reference identifier for this transaction line item.",
					"type": "string"
				},
				"reportingDate": {
					"format": "date-time",
					"description": "The date when this transaction should be reported.  By default, all transactions are reported on the date when the actual transaction took place.\r\n            In some cases, line items may be reported later due to delayed shipments or other business reasons.",
					"type": "string",
					"example": "2016-10-29T00:00:00-07:00"
				},
				"revAccount": {
					"description": "The revenue account number for this line item.",
					"type": "string",
					"example": ""
				},
				"sourcing": {
					"description": "Indicates whether this line item was taxed according to the origin or destination.",
					"enum": ["Destination",
					"Origin"],
					"type": "string",
					"example": 68
				},
				"tax": {
					"format": "double",
					"description": "The amount of tax generated for this line item.",
					"type": "number",
					"example": 62.50
				},
				"taxableAmount": {
					"format": "double",
					"description": "The taxable amount of this line item.",
					"type": "number",
					"example": 1000.0
				},
				"taxCalculated": {
					"format": "double",
					"description": "The tax calculated for this line by Avalara.  If the transaction was calculated with a tax override, this amount will be different from the \"tax\" value.",
					"type": "number",
					"example": 62.50
				},
				"taxCode": {
					"description": "The code string for the tax code that was used to calculate this line item.",
					"type": "string",
					"example": "PS081282"
				},
				"taxCodeId": {
					"format": "int32",
					"description": "The unique ID number for the tax code that was used to calculate this line item.",
					"type": "integer"
				},
				"taxDate": {
					"format": "date-time",
					"description": "The date that was used for calculating tax amounts for this line item.  By default, this date should be the same as the document date.\r\n            In some cases, for example when a consumer returns a product purchased previously, line items may be calculated using a tax date in the past\r\n            so that the consumer can receive a refund for the correct tax amount that was charged when the item was originally purchased.",
					"type": "string",
					"example": "2016-10-29T00:00:00-07:00"
				},
				"taxEngine": {
					"description": "The tax engine identifier that was used to calculate this line item.",
					"type": "string",
					"example": ""
				},
				"taxOverrideType": {
					"description": "If a tax override was specified, this indicates the type of tax override.",
					"enum": ["None",
					"TaxAmount",
					"Exemption",
					"TaxDate",
					"AccruedTaxAmount"],
					"type": "string",
					"example": 0
				},
				"taxOverrideAmount": {
					"format": "double",
					"description": "If a tax override was specified, this indicates the amount of tax that was requested.",
					"type": "number",
					"example": 0.00
				},
				"taxOverrideReason": {
					"description": "If a tax override was specified, represents the reason for the tax override.",
					"type": "string",
					"example": ""
				},
				"taxIncluded": {
					"description": "True if tax was included in the purchase price of the item.",
					"type": "boolean",
					"example": false
				},
				"details": {
					"description": "Optional: A list of tax details for this line item.  To fetch this list, add the query string \"?$include=Details\" to your URL.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionLineDetailModel"
					},
					"example": [{
						"id": 123456789,
						"transactionLineId": 123456789,
						"transactionId": 123456789,
						"addressId": 12345,
						"country": "US",
						"region": "CA",
						"stateFIPS": "06",
						"exemptAmount": 0.00,
						"exemptReasonId": 4,
						"inState": false,
						"jurisCode": "06",
						"jurisName": "CALIFORNIA",
						"jurisdictionId": 5000531,
						"signatureCode": "AGAM",
						"stateAssignedNo": "",
						"jurisType": "STA",
						"nonTaxableAmount": 0.0,
						"nonTaxableRuleId": 0,
						"nonTaxableType": "BaseRule",
						"rate": 0.0625,
						"rateRuleId": 1321915,
						"rateSourceId": 3,
						"serCode": "",
						"sourcing": "Destination",
						"tax": 62.50,
						"taxableAmount": 1000.0,
						"taxType": "Sales",
						"taxName": "CA STATE TAX",
						"taxAuthorityTypeId": 45,
						"taxRegionId": 2127184,
						"taxCalculated": 62.50,
						"taxOverride": 0.00,
						"rateType": "General"
					}]
				},
				"parameters": {
					"description": "Contains a list of extra parameters that were set when the transaction was created.",
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				}
			},
			"example": {
				"id": 123456789,
				"transactionId": 123456789,
				"lineNumber": "1",
				"boundaryOverrideId": 0,
				"customerUsageType": "",
				"description": "Yarn",
				"destinationAddressId": 12345,
				"originAddressId": 123456789,
				"discountAmount": 100.0,
				"discountTypeId": 0,
				"exemptAmount": 0.0,
				"exemptCertId": 0,
				"exemptNo": "",
				"isItemTaxable": true,
				"isSSTP": false,
				"itemCode": "116292",
				"lineAmount": 1000.0,
				"quantity": 1.00,
				"ref1": "Note: Deliver to Bob",
				"reportingDate": "2016-10-29T00:00:00-07:00",
				"revAccount": "",
				"sourcing": "Destination",
				"tax": 62.50,
				"taxableAmount": 1000.0,
				"taxCalculated": 62.50,
				"taxCode": "PS081282",
				"taxDate": "2016-10-29T00:00:00-07:00",
				"taxEngine": "",
				"taxOverrideType": "None",
				"taxOverrideAmount": 0.00,
				"taxOverrideReason": "",
				"taxIncluded": false,
				"details": [{
					"id": 123456789,
					"transactionLineId": 123456789,
					"transactionId": 123456789,
					"addressId": 12345,
					"country": "US",
					"region": "CA",
					"stateFIPS": "06",
					"exemptAmount": 0.00,
					"exemptReasonId": 4,
					"inState": false,
					"jurisCode": "06",
					"jurisName": "CALIFORNIA",
					"jurisdictionId": 5000531,
					"signatureCode": "AGAM",
					"stateAssignedNo": "",
					"jurisType": "STA",
					"nonTaxableAmount": 0.0,
					"nonTaxableRuleId": 0,
					"nonTaxableType": "BaseRule",
					"rate": 0.0625,
					"rateRuleId": 1321915,
					"rateSourceId": 3,
					"serCode": "",
					"sourcing": "Destination",
					"tax": 62.50,
					"taxableAmount": 1000.0,
					"taxType": "Sales",
					"taxName": "CA STATE TAX",
					"taxAuthorityTypeId": 45,
					"taxRegionId": 2127184,
					"taxCalculated": 62.50,
					"taxOverride": 0.00,
					"rateType": "General"
				}]
			}
		},
		"TransactionAddressModel": {
			"description": "An address used within this transaction.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this address.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"transactionId": {
					"format": "int64",
					"description": "The unique ID number of the document to which this address belongs.",
					"type": "integer",
					"readOnly": true,
					"example": 0
				},
				"boundaryLevel": {
					"description": "The boundary level at which this address was validated.",
					"enum": ["Address",
					"Zip9",
					"Zip5"],
					"type": "string",
					"readOnly": true,
					"example": 0
				},
				"line1": {
					"description": "The first line of the address.",
					"type": "string",
					"example": "100 Ravine Lane Northeast #220"
				},
				"line2": {
					"description": "The second line of the address.",
					"type": "string"
				},
				"line3": {
					"description": "The third line of the address.",
					"type": "string"
				},
				"city": {
					"description": "The city for the address.",
					"type": "string",
					"example": "Bainbridge Island"
				},
				"region": {
					"description": "The region, state, or province for the address.",
					"type": "string",
					"example": "WA"
				},
				"postalCode": {
					"description": "The postal code or zip code for the address.",
					"type": "string",
					"example": "98110"
				},
				"country": {
					"description": "The country for the address.",
					"type": "string",
					"example": "US"
				},
				"taxRegionId": {
					"format": "int32",
					"description": "The unique ID number of the tax region for this address.",
					"type": "integer",
					"example": 0
				}
			},
			"example": {
				"id": 0,
				"transactionId": 0,
				"boundaryLevel": "Address",
				"line1": "100 Ravine Lane Northeast #220",
				"city": "Bainbridge Island",
				"region": "WA",
				"postalCode": "98110",
				"country": "US",
				"taxRegionId": 0
			}
		},
		"TransactionSummary": {
			"description": "Summary information about an overall transaction.",
			"type": "object",
			"properties": {
				"country": {
					"description": "Two character ISO-3166 country code.",
					"type": "string"
				},
				"region": {
					"description": "Two or three character ISO region, state or province code, if applicable.",
					"type": "string"
				},
				"jurisType": {
					"description": "The type of jurisdiction that collects this tax.",
					"enum": ["Country",
					"Composite",
					"State",
					"County",
					"City",
					"Special"],
					"type": "string"
				},
				"jurisCode": {
					"description": "Jurisdiction Code for the taxing jurisdiction",
					"type": "string"
				},
				"jurisName": {
					"description": "The name of the jurisdiction that collects this tax.",
					"type": "string"
				},
				"taxAuthorityType": {
					"format": "int32",
					"description": "The unique ID of the Tax Authority Type that collects this tax.",
					"type": "integer"
				},
				"stateAssignedNo": {
					"description": "The state assigned number of the jurisdiction that collects this tax.",
					"type": "string"
				},
				"taxType": {
					"description": "The tax type of this tax.",
					"enum": ["ConsumerUse",
					"Excise",
					"Fee",
					"Input",
					"Nonrecoverable",
					"Output",
					"Rental",
					"Sales",
					"Use"],
					"type": "string"
				},
				"taxName": {
					"description": "The name of the tax.",
					"type": "string"
				},
				"taxGroup": {
					"description": "Group code when special grouping is enabled.",
					"type": "string"
				},
				"rateType": {
					"description": "Indicates the tax rate type.",
					"enum": ["ReducedA",
					"ReducedB",
					"Food",
					"General",
					"IncreasedStandard",
					"LinenRental",
					"Medical",
					"Parking",
					"SuperReduced",
					"ReducedR",
					"Standard",
					"Zero"],
					"type": "string"
				},
				"taxable": {
					"format": "double",
					"description": "Tax Base - The adjusted taxable amount.",
					"type": "number"
				},
				"rate": {
					"format": "double",
					"description": "Tax Rate - The rate of taxation, as a fraction of the amount.",
					"type": "number"
				},
				"tax": {
					"format": "double",
					"description": "Tax amount - The calculated tax (Base * Rate).",
					"type": "number"
				},
				"taxCalculated": {
					"format": "double",
					"description": "Tax Calculated by Avalara AvaTax.  This may be overriden by a TaxOverride.TaxAmount.",
					"type": "number"
				},
				"nonTaxable": {
					"format": "double",
					"description": "The amount of the transaction that was non-taxable.",
					"type": "number"
				},
				"exemption": {
					"format": "double",
					"description": "The amount of the transaction that was exempt.",
					"type": "number"
				}
			},
			"example": {
				
			}
		},
		"TransactionLineDetailModel": {
			"description": "An individual tax detail element.  Represents the amount of tax calculated for a particular jurisdiction, for a particular line in an invoice.",
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"description": "The unique ID number of this tax detail.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"transactionLineId": {
					"format": "int64",
					"description": "The unique ID number of the line within this transaction.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"transactionId": {
					"format": "int64",
					"description": "The unique ID number of this transaction.",
					"type": "integer",
					"readOnly": true,
					"example": 123456789
				},
				"addressId": {
					"format": "int64",
					"description": "The unique ID number of the address used for this tax detail.",
					"type": "integer",
					"example": 12345
				},
				"country": {
					"description": "The two character ISO 3166 country code of the country where this tax detail is assigned.",
					"maxLength": 2,
					"minLength": 2,
					"type": "string",
					"example": "US"
				},
				"region": {
					"description": "The two-or-three character ISO region code for the region where this tax detail is assigned.",
					"type": "string",
					"example": "CA"
				},
				"countyFIPS": {
					"description": "For U.S. transactions, the Federal Information Processing Standard (FIPS) code for the county where this tax detail is assigned.",
					"type": "string"
				},
				"stateFIPS": {
					"description": "For U.S. transactions, the Federal Information Processing Standard (FIPS) code for the state where this tax detail is assigned.",
					"type": "string",
					"example": "06"
				},
				"exemptAmount": {
					"format": "double",
					"description": "The amount of this line that was considered exempt in this tax detail.",
					"type": "number",
					"example": 0.00
				},
				"exemptReasonId": {
					"format": "int32",
					"description": "The unique ID number of the exemption reason for this tax detail.",
					"type": "integer",
					"example": 4
				},
				"inState": {
					"description": "True if this detail element represented an in-state transaction.",
					"type": "boolean",
					"example": false
				},
				"jurisCode": {
					"description": "The code of the jurisdiction to which this tax detail applies.",
					"type": "string",
					"example": "06"
				},
				"jurisName": {
					"description": "The name of the jurisdiction to which this tax detail applies.",
					"type": "string",
					"example": "CALIFORNIA"
				},
				"jurisdictionId": {
					"format": "int32",
					"description": "The unique ID number of the jurisdiction to which this tax detail applies.",
					"type": "integer",
					"example": 5000531
				},
				"signatureCode": {
					"description": "The Avalara-specified signature code of the jurisdiction to which this tax detail applies.",
					"type": "string",
					"example": "AGAM"
				},
				"stateAssignedNo": {
					"description": "The state assigned number of the jurisdiction to which this tax detail applies.",
					"type": "string",
					"example": ""
				},
				"jurisType": {
					"description": "The type of the jurisdiction to which this tax detail applies.",
					"enum": ["STA",
					"CTY",
					"CIT",
					"STJ",
					"CNT"],
					"type": "string",
					"example": 1
				},
				"nonTaxableAmount": {
					"format": "double",
					"description": "The amount of this line item that was considered nontaxable in this tax detail.",
					"type": "number",
					"example": 0.0
				},
				"nonTaxableRuleId": {
					"format": "int32",
					"description": "The rule according to which portion of this detail was considered nontaxable.",
					"type": "integer",
					"example": 0
				},
				"nonTaxableType": {
					"description": "The type of nontaxability that was applied to this tax detail.",
					"enum": ["RateRule",
					"RateOverrideRule",
					"BaseRule",
					"ExemptEntityRule",
					"ProductTaxabilityRule",
					"NexusRule"],
					"type": "string",
					"example": 2
				},
				"rate": {
					"format": "double",
					"description": "The rate at which this tax detail was calculated.",
					"type": "number",
					"example": 0.0625
				},
				"rateRuleId": {
					"format": "int32",
					"description": "The unique ID number of the rule according to which this tax detail was calculated.",
					"type": "integer",
					"example": 1321915
				},
				"rateSourceId": {
					"format": "int32",
					"description": "The unique ID number of the source of the rate according to which this tax detail was calculated.",
					"type": "integer",
					"example": 3
				},
				"serCode": {
					"description": "For Streamlined Sales Tax customers, the SST Electronic Return code under which this tax detail should be applied.",
					"type": "string",
					"example": ""
				},
				"sourcing": {
					"description": "Indicates whether this tax detail applies to the origin or destination of the transaction.",
					"enum": ["Destination",
					"Origin"],
					"type": "string",
					"example": 68
				},
				"tax": {
					"format": "double",
					"description": "The amount of tax for this tax detail.",
					"type": "number",
					"example": 62.50
				},
				"taxableAmount": {
					"format": "double",
					"description": "The taxable amount of this tax detail.",
					"type": "number",
					"example": 1000.0
				},
				"taxType": {
					"description": "The type of tax that was calculated.  Depends on the company's nexus settings as well as the jurisdiction's tax laws.",
					"enum": ["ConsumerUse",
					"Excise",
					"Fee",
					"Input",
					"Nonrecoverable",
					"Output",
					"Rental",
					"Sales",
					"Use"],
					"type": "string",
					"example": 83
				},
				"taxName": {
					"description": "The name of the tax against which this tax amount was calculated.",
					"type": "string",
					"example": "CA STATE TAX"
				},
				"taxAuthorityTypeId": {
					"format": "int32",
					"description": "The type of the tax authority to which this tax will be remitted.",
					"type": "integer",
					"example": 45
				},
				"taxRegionId": {
					"format": "int32",
					"description": "The unique ID number of the tax region.",
					"type": "integer",
					"example": 2127184
				},
				"taxCalculated": {
					"format": "double",
					"description": "The amount of tax that was calculated.  This amount may be different if a tax override was used.\r\n            If the customer specified a tax override, this calculated tax value represents the amount of tax that would\r\n            have been charged if Avalara had calculated the tax for the rule.",
					"type": "number",
					"example": 62.50
				},
				"taxOverride": {
					"format": "double",
					"description": "The amount of tax override that was specified for this tax line.",
					"type": "number",
					"example": 0.00
				},
				"rateType": {
					"description": "The rate type for this tax detail.",
					"enum": ["ReducedA",
					"ReducedB",
					"Food",
					"General",
					"IncreasedStandard",
					"LinenRental",
					"Medical",
					"Parking",
					"SuperReduced",
					"ReducedR",
					"Standard",
					"Zero"],
					"type": "string",
					"example": 71
				},
				"taxableUnits": {
					"format": "double",
					"description": "Number of units in this line item that were calculated to be taxable according to this rate detail.",
					"type": "number"
				},
				"nonTaxableUnits": {
					"format": "double",
					"description": "Number of units in this line item that were calculated to be nontaxable according to this rate detail.",
					"type": "number"
				},
				"exemptUnits": {
					"format": "double",
					"description": "Number of units in this line item that were calculated to be exempt according to this rate detail.",
					"type": "number"
				},
				"unitOfBasis": {
					"description": "When calculating units, what basis of measurement did we use for calculating the units?",
					"type": "string"
				}
			},
			"example": {
				"id": 123456789,
				"transactionLineId": 123456789,
				"transactionId": 123456789,
				"addressId": 12345,
				"country": "US",
				"region": "CA",
				"stateFIPS": "06",
				"exemptAmount": 0.00,
				"exemptReasonId": 4,
				"inState": false,
				"jurisCode": "06",
				"jurisName": "CALIFORNIA",
				"jurisdictionId": 5000531,
				"signatureCode": "AGAM",
				"stateAssignedNo": "",
				"jurisType": "STA",
				"nonTaxableAmount": 0.0,
				"nonTaxableRuleId": 0,
				"nonTaxableType": "BaseRule",
				"rate": 0.0625,
				"rateRuleId": 1321915,
				"rateSourceId": 3,
				"serCode": "",
				"sourcing": "Destination",
				"tax": 62.50,
				"taxableAmount": 1000.0,
				"taxType": "Sales",
				"taxName": "CA STATE TAX",
				"taxAuthorityTypeId": 45,
				"taxRegionId": 2127184,
				"taxCalculated": 62.50,
				"taxOverride": 0.00,
				"rateType": "General"
			}
		},
		"FetchResult[TransactionModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"AdjustTransactionModel": {
			"description": "A request to adjust tax for a previously existing transaction",
			"required": ["adjustmentReason",
			"newTransaction"],
			"type": "object",
			"properties": {
				"adjustmentReason": {
					"description": "A reason code indicating why this adjustment was made",
					"enum": ["NotAdjusted",
					"SourcingIssue",
					"ReconciledWithGeneralLedger",
					"ExemptCertApplied",
					"PriceAdjusted",
					"ProductReturned",
					"ProductExchanged",
					"BadDebt",
					"Other",
					"Offline"],
					"type": "string",
					"example": 4
				},
				"adjustmentDescription": {
					"description": "If the AdjustmentReason is \"Other\", specify the reason here",
					"type": "string",
					"example": "Price drop before shipping"
				},
				"newTransaction": {
					"$ref": "#/definitions/CreateTransactionModel",
					"description": "Replace the current transaction with tax data calculated for this new transaction",
					"example": {
						"type": "SalesInvoice",
						"companyCode": "DEFAULT",
						"date": "2016-10-29T00:00:00-07:00",
						"customerCode": "ABC",
						"purchaseOrderNo": "2016-10-29-001",
						"addresses": {
							"SingleLocation": {
								"line1": "123 Main Street",
								"city": "Irvine",
								"region": "CA",
								"country": "US",
								"postalCode": "92615"
							}
						},
						"lines": [{
							"number": "1",
							"quantity": 1.0,
							"amount": 100.0,
							"taxCode": "PS081282",
							"itemCode": "Y0001",
							"description": "Yarn"
						}],
						"commit": true,
						"taxDate": "2016-10-29T00:00:00-07:00",
						"currencyCode": "USD",
						"description": "Yarn"
					}
				}
			},
			"example": {
				"adjustmentReason": "PriceAdjusted",
				"adjustmentDescription": "Price drop before shipping",
				"newTransaction": {
					"type": "SalesInvoice",
					"companyCode": "DEFAULT",
					"date": "2016-10-29T00:00:00-07:00",
					"customerCode": "ABC",
					"purchaseOrderNo": "2016-10-29-001",
					"addresses": {
						"SingleLocation": {
							"line1": "123 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92615"
						}
					},
					"lines": [{
						"number": "1",
						"quantity": 1.0,
						"amount": 100.0,
						"taxCode": "PS081282",
						"itemCode": "Y0001",
						"description": "Yarn"
					}],
					"commit": true,
					"taxDate": "2016-10-29T00:00:00-07:00",
					"currencyCode": "USD",
					"description": "Yarn"
				}
			}
		},
		"CreateTransactionModel": {
			"description": "Create a transaction",
			"required": ["companyCode",
			"date",
			"customerCode"],
			"type": "object",
			"properties": {
				"type": {
					"description": "Document Type",
					"enum": ["SalesOrder",
					"SalesInvoice",
					"PurchaseOrder",
					"PurchaseInvoice",
					"ReturnOrder",
					"ReturnInvoice",
					"InventoryTransferOrder",
					"InventoryTransferInvoice",
					"ReverseChargeOrder",
					"ReverseChargeInvoice",
					"Any"],
					"type": "string",
					"example": 1
				},
				"code": {
					"description": "Transaction Code - the internal reference code used by the client application.  This is used for operations such as\r\n                Get, Adjust, Settle, and Void.  If you leave the transaction code blank, a GUID will be assigned to each transaction.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"companyCode": {
					"description": "Company Code - If you are posting to /api/v2/transactions/create, you must specify the company code value here.\r\n                If you are posting to /api/v2/companies/(companyCode)/transactions/create, this value must be null.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "DEFAULT"
				},
				"date": {
					"format": "date-time",
					"description": "Transaction Date - The date on the invoice, purchase order, etc.",
					"type": "string",
					"example": "2016-10-29T00:00:00-07:00"
				},
				"salespersonCode": {
					"description": "Salesperson Code - The client application salesperson reference code.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"customerCode": {
					"description": "Customer Code - The client application customer reference code.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "ABC"
				},
				"customerUsageType": {
					"description": "Customer Usage Type - The client application customer or usage type.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"discount": {
					"format": "double",
					"description": "Discount - The discount amount to apply to the document.",
					"type": "number"
				},
				"purchaseOrderNo": {
					"description": "Purchase Order Number for this document",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "2016-10-29-001"
				},
				"exemptionNo": {
					"description": "Exemption Number for this document",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"addresses": {
					"description": "Default addresses for all lines in this document",
					"type": "object",
					"properties": {
						"ShipFrom": {
							"$ref": "#/definitions/AddressInfo"
						},
						"ShipTo": {
							"$ref": "#/definitions/AddressInfo"
						},
						"PointOfOrderAcceptance": {
							"$ref": "#/definitions/AddressInfo"
						},
						"PointOfOrderOrigin": {
							"$ref": "#/definitions/AddressInfo"
						},
						"SingleLocation": {
							"$ref": "#/definitions/AddressInfo"
						}
					},
					"example": {
						"SingleLocation": {
							"line1": "123 Main Street",
							"city": "Irvine",
							"region": "CA",
							"country": "US",
							"postalCode": "92615"
						}
					}
				},
				"lines": {
					"description": "Document line items list",
					"type": "array",
					"items": {
						"$ref": "#/definitions/LineItemModel"
					},
					"example": [{
						"number": "1",
						"quantity": 1.0,
						"amount": 100.0,
						"taxCode": "PS081282",
						"itemCode": "Y0001",
						"description": "Yarn"
					}]
				},
				"parameters": {
					"description": "Special parameters that apply to this line within this transaction.\r\n                To get a full list of available parameters, please use the /api/v2/definitions/parameters endpoint.",
					"type": "object",
					"properties": {
						"Avatax.LandedCost.HTSCode": {
							"type": "string",
							"description": "Code to identify LC transaction"
						}
					},
					"example": {
						"Avalara.TestProperty": "Avalara.TestValue"
					}
				},
				"referenceCode": {
					"description": "Reference Code used to reference the original document for a return invoice",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"reportingLocationCode": {
					"description": "Sets the sale location code (Outlet ID) for reporting this document to the tax authority.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"commit": {
					"description": "Causes the document to be committed if true.",
					"type": "boolean",
					"example": true
				},
				"batchCode": {
					"description": "BatchCode for batch operations.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"taxOverride": {
					"$ref": "#/definitions/TaxOverrideModel",
					"description": "Specifies a tax override for the entire document"
				},
				"taxDate": {
					"format": "date-time",
					"description": "Indicates the tax effectivity override date for the entire document.",
					"type": "string",
					"example": "2016-10-29T00:00:00-07:00"
				},
				"currencyCode": {
					"description": "3 character ISO 4217 currency code.",
					"maxLength": 3,
					"minLength": 0,
					"type": "string",
					"example": "USD"
				},
				"serviceMode": {
					"description": "Specifies whether the tax calculation is handled Local, Remote, or Automatic (default)",
					"enum": ["Automatic",
					"Local",
					"Remote"],
					"type": "string"
				},
				"exchangeRate": {
					"format": "double",
					"description": "Currency exchange rate from this transaction to the company base currency.",
					"type": "number"
				},
				"exchangeRateEffectiveDate": {
					"format": "date-time",
					"description": "Effective date of the exchange rate.",
					"type": "string"
				},
				"posLaneCode": {
					"description": "Sets the POS Lane Code sent by the User for this document.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"businessIdentificationNo": {
					"description": "BusinessIdentificationNo",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"isSellerImporterOfRecord": {
					"description": "Specifies if the Transaction has the seller as IsSellerImporterOfRecord",
					"type": "boolean"
				},
				"description": {
					"description": "Description",
					"maxLength": 2048,
					"minLength": 0,
					"type": "string",
					"example": "Yarn"
				},
				"email": {
					"description": "Email",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"debugLevel": {
					"description": "If the user wishes to request additional debug information from this transaction, specify a level higher than 'normal'",
					"enum": ["Normal",
					"Diagnostic"],
					"type": "string"
				}
			},
			"example": {
				"type": "SalesInvoice",
				"companyCode": "DEFAULT",
				"date": "2016-10-29T00:00:00-07:00",
				"customerCode": "ABC",
				"purchaseOrderNo": "2016-10-29-001",
				"addresses": {
					"SingleLocation": {
						"line1": "123 Main Street",
						"city": "Irvine",
						"region": "CA",
						"country": "US",
						"postalCode": "92615"
					}
				},
				"lines": [{
					"number": "1",
					"quantity": 1.0,
					"amount": 100.0,
					"taxCode": "PS081282",
					"itemCode": "Y0001",
					"description": "Yarn"
				}],
				"commit": true,
				"taxDate": "2016-10-29T00:00:00-07:00",
				"currencyCode": "USD",
				"description": "Yarn"
			}
		},
		"LineItemModel": {
			"description": "Represents one line item in a transaction",
			"required": ["quantity",
			"amount"],
			"type": "object",
			"properties": {
				"number": {
					"description": "Line number within this document",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "1"
				},
				"quantity": {
					"format": "double",
					"description": "Quantity of items in this line",
					"type": "number",
					"example": 1.0
				},
				"amount": {
					"format": "double",
					"description": "Total amount for this line",
					"type": "number",
					"example": 100.0
				},
				"addresses": {
					"description": "Specify any differences for addresses between this line and the rest of the document",
					"type": "object",
					"properties": {
						"ShipFrom": {
							"$ref": "#/definitions/AddressInfo"
						},
						"ShipTo": {
							"$ref": "#/definitions/AddressInfo"
						},
						"PointOfOrderAcceptance": {
							"$ref": "#/definitions/AddressInfo"
						},
						"PointOfOrderOrigin": {
							"$ref": "#/definitions/AddressInfo"
						},
						"SingleLocation": {
							"$ref": "#/definitions/AddressInfo"
						}
					}
				},
				"taxCode": {
					"description": "Tax Code - System or Custom Tax Code.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string",
					"example": "PS081282"
				},
				"customerUsageType": {
					"description": "Customer Usage Type - The client application customer or usage type.",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"itemCode": {
					"description": "Item Code (SKU)",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "Y0001"
				},
				"exemptionCode": {
					"description": "Exemption number for this line",
					"type": "string"
				},
				"discounted": {
					"description": "True if the document discount should be applied to this line",
					"type": "boolean"
				},
				"taxIncluded": {
					"description": "Indicates if line has Tax Included; defaults to false",
					"type": "boolean"
				},
				"revenueAccount": {
					"description": "Revenue Account",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"ref1": {
					"description": "Reference 1 - Client specific reference field",
					"maxLength": 250,
					"minLength": 0,
					"type": "string"
				},
				"ref2": {
					"description": "Reference 2 - Client specific reference field",
					"maxLength": 250,
					"minLength": 0,
					"type": "string"
				},
				"description": {
					"description": "Item description.  This is required for SST transactions if an unmapped ItemCode is used.",
					"maxLength": 2096,
					"minLength": 0,
					"type": "string",
					"example": "Yarn"
				},
				"businessIdentificationNo": {
					"description": "BusinessIdentificationNo",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"taxOverride": {
					"$ref": "#/definitions/TaxOverrideModel",
					"description": "Specifies a tax override for this line"
				},
				"parameters": {
					"description": "Special parameters that apply to this line within this transaction.\r\n                To get a full list of available parameters, please use the /api/v2/definitions/parameters endpoint.",
					"type": "object",
					"properties": {
						"Avatax.LandedCost.HTSCode": {
							"type": "string",
							"description": "Code to identify LC transaction"
						}
					},
					"example": {
						"Avalara.TestProperty": "Avalara.TestValue"
					}
				}
			},
			"example": {
				"number": "1",
				"quantity": 1.0,
				"amount": 100.0,
				"taxCode": "PS081282",
				"itemCode": "Y0001",
				"description": "Yarn"
			}
		},
		"TaxOverrideModel": {
			"description": "Represents a tax override for a transaction",
			"type": "object",
			"properties": {
				"type": {
					"description": "Identifies the type of tax override",
					"enum": ["None",
					"TaxAmount",
					"Exemption",
					"TaxDate",
					"AccruedTaxAmount",
					"DeriveTaxable"],
					"type": "string",
					"example": 1
				},
				"taxAmount": {
					"format": "double",
					"description": "Indicates a total override of the calculated tax on the document.  AvaTax will distribute\r\n                the override across all the lines.",
					"type": "number",
					"example": 6.25
				},
				"taxDate": {
					"format": "date-time",
					"description": "The override tax date to use",
					"type": "string",
					"example": "2016-10-29T00:00:00-07:00"
				},
				"reason": {
					"description": "This provides the reason for a tax override for audit purposes.  It is required for types 2-4.",
					"type": "string",
					"example": "Precalculated Tax"
				}
			},
			"example": {
				"type": "TaxAmount",
				"taxAmount": 6.25,
				"taxDate": "2016-10-29T00:00:00-07:00",
				"reason": "Precalculated Tax"
			}
		},
		"VoidTransactionModel": {
			"description": "A request to void a previously created transaction",
			"required": ["code"],
			"type": "object",
			"properties": {
				"code": {
					"description": "Please specify the reason for voiding or cancelling this transaction",
					"enum": ["Unspecified",
					"PostFailed",
					"DocDeleted",
					"DocVoided",
					"AdjustmentCancelled"],
					"type": "string",
					"example": 3
				}
			},
			"example": {
				"code": "DocVoided"
			}
		},
		"SettleTransactionModel": {
			"description": "Settle this transaction with your ledger by executing one or many actions against that transaction.  \r\n            You may use this endpoint to verify the transaction, change the transaction's code, and commit the transaction for reporting purposes.\r\n            This endpoint may be used to execute any or all of these actions at once.",
			"type": "object",
			"properties": {
				"verify": {
					"$ref": "#/definitions/VerifyTransactionModel",
					"description": "To use the \"Settle\" endpoint to verify a transaction, fill out this value.",
					"example": {
						"verifyTransactionDate": "2016-10-29T00:00:00-07:00",
						"verifyTotalAmount": 100.0,
						"verifyTotalTax": 6.25
					}
				},
				"changeCode": {
					"$ref": "#/definitions/ChangeTransactionCodeModel",
					"description": "To use the \"Settle\" endpoint to change a transaction's code, fill out this value.",
					"example": {
						"newCode": "eb12ba36-ecd9-4252-8137-fb819f125400"
					}
				},
				"commit": {
					"$ref": "#/definitions/CommitTransactionModel",
					"description": "To use the \"Settle\" endpoint to commit a transaction for reporting purposes, fill out this value.\r\n                If you use Avalara Returns, committing a transaction will cause that transaction to be filed.",
					"example": {
						"commit": true
					}
				}
			},
			"example": {
				"verify": {
					"verifyTransactionDate": "2016-10-29T00:00:00-07:00",
					"verifyTotalAmount": 100.0,
					"verifyTotalTax": 6.25
				},
				"changeCode": {
					"newCode": "eb12ba36-ecd9-4252-8137-fb819f125400"
				},
				"commit": {
					"commit": true
				}
			}
		},
		"VerifyTransactionModel": {
			"description": "Verify this transaction by matching it to values in your accounting system.",
			"type": "object",
			"properties": {
				"verifyTransactionDate": {
					"format": "date-time",
					"description": "Transaction Date - The date on the invoice, purchase order, etc.",
					"type": "string",
					"example": "2016-10-29T00:00:00-07:00"
				},
				"verifyTotalAmount": {
					"format": "double",
					"description": "Total Amount - The total amount (not including tax) for the document.",
					"type": "number",
					"example": 100.0
				},
				"verifyTotalTax": {
					"format": "double",
					"description": "Total Tax - The total tax for the document.",
					"type": "number",
					"example": 6.25
				}
			},
			"example": {
				"verifyTransactionDate": "2016-10-29T00:00:00-07:00",
				"verifyTotalAmount": 100.0,
				"verifyTotalTax": 6.25
			}
		},
		"ChangeTransactionCodeModel": {
			"description": "Settle this transaction with your ledger by verifying its amounts.\r\n            If the transaction is not yet committed, you may specify the \"commit\" value to commit it to the ledger and allow it to be reported.\r\n            You may also optionally change the transaction's code by specifying the \"newTransactionCode\" value.",
			"required": ["newCode"],
			"type": "object",
			"properties": {
				"newCode": {
					"description": "To change the transaction code for this transaction, specify the new transaction code here.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string",
					"example": "c98fe14d-749e-4788-8347-94ca9296f983"
				}
			},
			"example": {
				"newCode": "c98fe14d-749e-4788-8347-94ca9296f983"
			}
		},
		"CommitTransactionModel": {
			"description": "Commit this transaction as permanent",
			"required": ["commit"],
			"type": "object",
			"properties": {
				"commit": {
					"description": "Set this value to be true to commit this transaction.\r\n            Committing a transaction allows it to be reported on a tax return.  Uncommitted transactions will not be reported.",
					"type": "boolean",
					"example": true
				}
			},
			"example": {
				"commit": true
			}
		},
		"FetchResult[UPCModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/UPCModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"FetchResult[UserModel]": {
			"description": "Represents a fetch result",
			"type": "object",
			"properties": {
				"@recordsetCount": {
					"format": "int32",
					"description": "The number of rows returned by your query, prior to pagination.",
					"type": "integer"
				},
				"value": {
					"description": "The paginated and filtered list of records matching the parameters you supplied.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserModel"
					}
				},
				"@nextLink": {
					"description": "The link to the next page of results",
					"type": "string"
				}
			}
		},
		"UserEntitlementModel": {
			"description": "User Entitlement Model",
			"type": "object",
			"properties": {
				"permissions": {
					"description": "List of API names and categories that this user is permitted to access",
					"type": "array",
					"items": {
						"type": "string"
					},
					"example": ["CompanyFetch",
					"CompanySave",
					"NexusFetch",
					"NexusSave"]
				},
				"accessLevel": {
					"description": "What access privileges does the current user have to see companies?",
					"enum": ["None",
					"SingleCompany",
					"SingleAccount",
					"AllCompanies"],
					"type": "string",
					"example": 2
				},
				"companies": {
					"description": "The identities of all companies this user is permitted to access",
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					},
					"example": [123,
					456,
					789]
				}
			},
			"example": {
				"permissions": ["CompanyFetch",
				"CompanySave",
				"NexusFetch",
				"NexusSave"],
				"accessLevel": "SingleAccount",
				"companies": [123,
				456,
				789]
			}
		},
		"PingResultModel": {
			"description": "Ping Result Model",
			"type": "object",
			"properties": {
				"version": {
					"description": "Version number",
					"type": "string",
					"example": "1.0.0.0"
				},
				"authenticated": {
					"description": "Returns true if you provided authentication for this API call; false if you did not.",
					"type": "boolean",
					"example": true
				},
				"authenticationType": {
					"description": "Returns the type of authentication you provided, if authenticated",
					"enum": ["None",
					"UsernamePassword",
					"AccountIdLicenseKey",
					"OpenIdBearerToken"],
					"type": "string",
					"example": 1
				},
				"authenticatedUserName": {
					"description": "The username of the currently authenticated user, if any.",
					"type": "string",
					"example": "TestUser"
				}
			},
			"example": {
				"version": "1.0.0.0",
				"authenticated": true,
				"authenticationType": "UsernamePassword",
				"authenticatedUserName": "TestUser"
			}
		}
	},
	"securityDefinitions": {
		"UserSecurity": {
			"type": "basic",
			"description": "Basic Username:Password HTTP authentication using Base64 encoding."
		},
		"ApiKeySecurity": {
			"name": "Authorization",
			"in": "header",
			"type": "apiKey",
			"description": "Basic AccountId:PrivateLicenseKey authentication using Base64 encoding.  This is identical to Username/Password authentication, except that you provide your AccountID as your username and your API key as your password."
		},
		"OauthSecurity": {
			"flow": "accessCode",
			"authorizationUrl": "https://ai-ci.avlr.sh/connect/authorize",
			"tokenUrl": "https://ai-ci.avlr.sh/connect/token",
			"type": "oauth2",
			"description": "A bearer token provided by the Avalara Identity server."
		}
	},
	"x-group-by-tags": true,
	"x-auth-formula": "`Basic ${btoa(`<username>:<password>`)}`",
	"x-sample-auth-header": "Basic aHR0cHdhdGNoOmY=",
	"x-ApiType": "REST",
	"x-api-proxy": {
		"route": "https://e3zwcxla5k.execute-api.us-west-2.amazonaws.com/prod/",
		"key": {
			"name": "api-key",
			"location": "api-proxy-key/key"
		}
	}
}